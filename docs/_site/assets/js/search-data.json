{"0": {
    "doc": "Add Destiny Step",
    "title": "Add Destiny Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/adddestiny.html",
    
    "relUrl": "/events/steps/adddestiny.html"
  },"1": {
    "doc": "Add Destiny Step",
    "title": "Introduction",
    "content": "The Add Destiny Step adds a destiny to the player. Note, the destiny must first have been added via the window.modAPI.action.addDestiny function. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/adddestiny.html#introduction",
    
    "relUrl": "/events/steps/adddestiny.html#introduction"
  },"2": {
    "doc": "Add Destiny Step",
    "title": "Interface",
    "content": "interface AddDestinyStep { kind: 'destiny'; condition?: string; destiny: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/adddestiny.html#interface",
    
    "relUrl": "/events/steps/adddestiny.html#interface"
  },"3": {
    "doc": "Add Destiny Step",
    "title": "Properties",
    "content": "kind - Always 'destiny' . destiny - Name of destiny to be added . condition (optional) - Conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/adddestiny.html#properties",
    
    "relUrl": "/events/steps/adddestiny.html#properties"
  },"4": {
    "doc": "Add Destiny Step",
    "title": "Examples",
    "content": "{ kind: 'destiny', destiny: myDestiny.name } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/adddestiny.html#examples",
    
    "relUrl": "/events/steps/adddestiny.html#examples"
  },"5": {
    "doc": "Add Follower Step",
    "title": "Add Follower Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addfollower.html",
    
    "relUrl": "/events/steps/addfollower.html"
  },"6": {
    "doc": "Add Follower Step",
    "title": "Introduction",
    "content": "The Add Follower Step adds a character as a temporary follower with ongoing benefits and interactions. Followers provide persistent buffs and can be interacted with over extended periods. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addfollower.html#introduction",
    
    "relUrl": "/events/steps/addfollower.html#introduction"
  },"7": {
    "doc": "Add Follower Step",
    "title": "Interface",
    "content": "interface AddFollowerStep { kind: 'addFollower'; condition?: string; character: string; followDef: FollowCharacterDefinition | undefined; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addfollower.html#interface",
    
    "relUrl": "/events/steps/addfollower.html#interface"
  },"8": {
    "doc": "Add Follower Step",
    "title": "Properties",
    "content": "kind - Always 'addFollower' . character - Name of the character becoming a follower . | String identifying which character will become a follower | . followDef - Follower definition including buffs, duration, and interactions . | Can be undefined for basic follower with no special properties | Defines the follower’s capabilities, duration, and associated events | . condition (optional) - Conditional execution . | Flag expression that must be true for the step to execute | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addfollower.html#properties",
    
    "relUrl": "/events/steps/addfollower.html#properties"
  },"9": {
    "doc": "Add Follower Step",
    "title": "Examples",
    "content": "Use an existing character as a follower . { kind: 'addFollower', character: 'Pi Lip', followDef: undefined } . Follower with custom follow def . { kind: 'addFollower', character: 'Junior Disciple', followDef: { formParty: [ { kind: 'speech', character: 'Junior Disciple', text: 'I\\'ll follow your lead, Senior!' } ], duration: 7, buff: { canStack: false, stats: { maxbarrier: { value: 0.05, stat: 'maxbarrier' } } }, cooldown: 2, dissolveParty: [ { kind: 'speech', character: 'Junior Disciple', text: 'Thank you for letting me accompany you, Senior.' } ] } } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addfollower.html#examples",
    
    "relUrl": "/events/steps/addfollower.html#examples"
  },"10": {
    "doc": "Add Guild Approval Step",
    "title": "Add Guild Approval Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addguildapproval.html",
    
    "relUrl": "/events/steps/addguildapproval.html"
  },"11": {
    "doc": "Add Guild Approval Step",
    "title": "Introduction",
    "content": "The Add Guild Approval Step increases a player’s approval rating with specific guilds in AFNM. Guild approval represents standing, reputation, and respect within an organization, affecting access to guild-specific benefits like shops, quests, and promotions. This step is essential for implementing guild progression systems, quest rewards that build faction reputation, and any content where players need to earn their way through guild hierarchies. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addguildapproval.html#introduction",
    
    "relUrl": "/events/steps/addguildapproval.html#introduction"
  },"12": {
    "doc": "Add Guild Approval Step",
    "title": "Interface",
    "content": "interface AddGuildApprovalStep { kind: 'addGuildApproval'; condition?: string; guild: string; amount: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addguildapproval.html#interface",
    
    "relUrl": "/events/steps/addguildapproval.html#interface"
  },"13": {
    "doc": "Add Guild Approval Step",
    "title": "Properties",
    "content": "Required Properties . kind - Always 'addGuildApproval' . | Identifies this as a guild approval addition step | . guild - Guild name to modify approval for . | Must match an existing guild name exactly | . amount - Approval points to add . | String expression that evaluates to the number of approval points | . Optional Properties . condition - Conditional execution . | Flag expression that must be true for approval to be added | Step is skipped if condition fails | Useful for conditional rewards based on player actions or state | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addguildapproval.html#properties",
    
    "relUrl": "/events/steps/addguildapproval.html#properties"
  },"14": {
    "doc": "Add Guild Approval Step",
    "title": "Basic Examples",
    "content": "Simple Mission Reward . { kind: 'addGuildApproval', guild: 'Immortal Fang Society', amount: '3' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addguildapproval.html#basic-examples",
    
    "relUrl": "/events/steps/addguildapproval.html#basic-examples"
  },"15": {
    "doc": "Add Item Step",
    "title": "Add Item Step",
    "content": "Gives items to the player’s inventory as rewards, loot, or gifts. If looking to add multiple items, use the Add Multiple Item Step instead. If you wish to add a random item from a pool, use Drop Item Step instead. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/additem.html",
    
    "relUrl": "/events/steps/additem.html"
  },"16": {
    "doc": "Add Item Step",
    "title": "Interface",
    "content": "interface AddItemStep { kind: 'addItem'; condition?: string; item: ItemDesc; amount: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/additem.html#interface",
    
    "relUrl": "/events/steps/additem.html#interface"
  },"17": {
    "doc": "Add Item Step",
    "title": "Properties",
    "content": "kind - Always 'addItem' . item - Description of the item to add, including name and any modifiers. This must either be the name of an item already in the game, or one added by window.modAPI.actions.addItem . amount - String expression for the quantity to add. Can be literal numbers or mathematical expressions. condition (optional) - Flag expression that must evaluate to true for the step to execute. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/additem.html#properties",
    
    "relUrl": "/events/steps/additem.html#properties"
  },"18": {
    "doc": "Add Item Step",
    "title": "Examples",
    "content": "Basic Item Addition . { kind: 'addItem', item: { name: 'Spirit Grass' }, amount: '5' } . Variable Amount . { kind: 'addItem', item: { name: 'Experience Pills' }, amount: 'realm * 2' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/additem.html#examples",
    
    "relUrl": "/events/steps/additem.html#examples"
  },"19": {
    "doc": "Add Multiple Items Step",
    "title": "Add Multiple Items Step",
    "content": "The Add Multiple Items Step efficiently adds several different items to the player’s inventory in a single step. It’s perfect for quest rewards, loot bundles, and gift packages. If you want to instead add multiple items from a larger pool of items, use the Drop Item Step instead. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addmultipleitem.html",
    
    "relUrl": "/events/steps/addmultipleitem.html"
  },"20": {
    "doc": "Add Multiple Items Step",
    "title": "Interface",
    "content": "interface AddMultipleItemStep { kind: 'addMultipleItem'; condition?: string; items: { item: ItemDesc; amount: string }[]; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addmultipleitem.html#interface",
    
    "relUrl": "/events/steps/addmultipleitem.html#interface"
  },"21": {
    "doc": "Add Multiple Items Step",
    "title": "Properties",
    "content": "kind - Always 'addMultipleItem' . items - Array of item/amount pairs to add simultaneously . condition (optional) - Flag expression for conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addmultipleitem.html#properties",
    
    "relUrl": "/events/steps/addmultipleitem.html#properties"
  },"22": {
    "doc": "Add Multiple Items Step",
    "title": "Examples",
    "content": "Quest Reward Bundle . { kind: 'addMultipleItem', items: [ { item: { name: 'Spirit Stone' }, amount: '10' }, { item: { name: 'Healing Pill' }, amount: '5' }, { item: { name: 'Cultivation Manual' }, amount: '1' } ] } . Variable Reward Amounts . { kind: 'addMultipleItem', items: [ { item: { name: 'Gold Coin' }, amount: 'questDifficulty * 100' }, { item: { name: 'Experience Crystal' }, amount: 'yearMonth/3' } ] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addmultipleitem.html#examples",
    
    "relUrl": "/events/steps/addmultipleitem.html#examples"
  },"23": {
    "doc": "Add Quest Step",
    "title": "Add Quest Step",
    "content": "Starts new questlines, adding them to the player’s quest log. Any quest added in this way must first have been added by the window.modAPI.actions.addQuest function. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addquest.html",
    
    "relUrl": "/events/steps/addquest.html"
  },"24": {
    "doc": "Add Quest Step",
    "title": "Interface",
    "content": "interface AddQuestStep { kind: 'quest'; condition?: string; quest: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addquest.html#interface",
    
    "relUrl": "/events/steps/addquest.html#interface"
  },"25": {
    "doc": "Add Quest Step",
    "title": "Properties",
    "content": "kind - Always 'quest' . quest - Name of quest to add. condition (optional) - Flag expression that must evaluate to true for the step to execute. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addquest.html#properties",
    
    "relUrl": "/events/steps/addquest.html#properties"
  },"26": {
    "doc": "Add Quest Step",
    "title": "Example",
    "content": "Basic Quest Start . { kind: 'quest', quest: 'Bandit Leader Hunt' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addquest.html#example",
    
    "relUrl": "/events/steps/addquest.html#example"
  },"27": {
    "doc": "Add Recipe Step",
    "title": "Add Recipe Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addrecipe.html",
    
    "relUrl": "/events/steps/addrecipe.html"
  },"28": {
    "doc": "Add Recipe Step",
    "title": "Introduction",
    "content": "The Add Recipe Step grants the player new crafting recipes for creating items. The recipe must first have been added via the window.modAPI.action.addItem function. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addrecipe.html#introduction",
    
    "relUrl": "/events/steps/addrecipe.html#introduction"
  },"29": {
    "doc": "Add Recipe Step",
    "title": "Interface",
    "content": "interface AddRecipeStep { kind: 'addRecipe'; condition?: string; recipe: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addrecipe.html#interface",
    
    "relUrl": "/events/steps/addrecipe.html#interface"
  },"30": {
    "doc": "Add Recipe Step",
    "title": "Properties",
    "content": "kind - Always 'addRecipe' . recipe - Recipe to add . condition (optional) - Conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addrecipe.html#properties",
    
    "relUrl": "/events/steps/addrecipe.html#properties"
  },"31": {
    "doc": "Add Recipe Step",
    "title": "Example",
    "content": "{ kind: 'addRecipe', recipe: 'Spirit Enhancement Pill' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/addrecipe.html#example",
    
    "relUrl": "/events/steps/addrecipe.html#example"
  },"32": {
    "doc": "Advance Guild Rank Step",
    "title": "Advance Guild Rank Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/advanceguildrank.html",
    
    "relUrl": "/events/steps/advanceguildrank.html"
  },"33": {
    "doc": "Advance Guild Rank Step",
    "title": "Introduction",
    "content": "The Advance Guild Rank Step promotes the player to the next rank within a specified guild, forming a core part of guild progression systems. This step handles rank promotions, unlocks new guild features and shops, and resets guild approval back to zero for the next promotion cycle. Guild ranks define the player’s standing within organizations and affect available interactions, shop items, and story content. Each guild has its own progression path with meaningful rank names and associated benefits. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/advanceguildrank.html#introduction",
    
    "relUrl": "/events/steps/advanceguildrank.html#introduction"
  },"34": {
    "doc": "Advance Guild Rank Step",
    "title": "Interface",
    "content": "interface AdvanceGuildRankStep { kind: 'advanceGuildRank'; condition?: string; guild: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/advanceguildrank.html#interface",
    
    "relUrl": "/events/steps/advanceguildrank.html#interface"
  },"35": {
    "doc": "Advance Guild Rank Step",
    "title": "Properties",
    "content": "Required Properties . kind - Always 'advanceGuildRank' . | Identifies this as a guild rank advancement step | . guild - Guild identifier . | String matching the guild’s unique name | . Optional Properties . condition - Conditional execution . | Flag expression that must be true for promotion to occur | Step is skipped if condition fails | Useful for additional promotion requirements beyond the standard system | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/advanceguildrank.html#properties",
    
    "relUrl": "/events/steps/advanceguildrank.html#properties"
  },"36": {
    "doc": "Advance Guild Rank Step",
    "title": "Guild System Overview",
    "content": "How Guild Ranks Work . | Rank Progression: Players start at rank 0 and advance through numbered ranks | Approval System: Players earn approval through completed quests and activities | Promotion Requirements: Each rank requires a certain approval threshold | Rank Benefits: Higher ranks unlock new shop items, interactions, and content | Rank Reset: Upon promotion, approval resets to 0 for the next cycle | . Automatic Effects . When this step executes, it automatically: . | Increases the player’s rank by 1 for the specified guild | Resets guild approval to 0 (starting fresh for next promotion) | Displays a promotion message with the new rank title | Unlocks new guild features based on the new rank | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/advanceguildrank.html#guild-system-overview",
    
    "relUrl": "/events/steps/advanceguildrank.html#guild-system-overview"
  },"37": {
    "doc": "Advance Guild Rank Step",
    "title": "Basic Examples",
    "content": "Simple Guild Promotion . { kind: 'advanceGuildRank', guild: 'Celadon Flame Brewers' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/advanceguildrank.html#basic-examples",
    
    "relUrl": "/events/steps/advanceguildrank.html#basic-examples"
  },"38": {
    "doc": "Approval Step",
    "title": "Approval Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/approval.html",
    
    "relUrl": "/events/steps/approval.html"
  },"39": {
    "doc": "Approval Step",
    "title": "Introduction",
    "content": "The Approval Step modifies a character’s approval rating toward the player, forming the foundation of relationship progression in AFNM. It handles approval gains from helpful actions, quest completions, and thoughtful choices, as well as approval losses from poor decisions or conflicting values. This step is essential for creating meaningful character relationships where player actions have lasting consequences on how NPCs perceive and interact with them throughout their cultivation journey. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/approval.html#introduction",
    
    "relUrl": "/events/steps/approval.html#introduction"
  },"40": {
    "doc": "Approval Step",
    "title": "Interface",
    "content": "interface ApprovalStep { kind: 'approval'; condition?: string; character: string; amount: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/approval.html#interface",
    
    "relUrl": "/events/steps/approval.html#interface"
  },"41": {
    "doc": "Approval Step",
    "title": "Properties",
    "content": "Required Properties . kind - Always 'approval' . | Identifies this as an approval modification step | . character - Character name . | String identifying which character’s approval changes | Must reference an existing character in the game | . amount - Approval change expression . | String expression that evaluates to the approval amount to add or remove | . Optional Properties . condition - Conditional execution . | Flag expression that must be true for approval change to occur | Step is skipped if condition fails | Useful for conditional approval based on player actions or character state | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/approval.html#properties",
    
    "relUrl": "/events/steps/approval.html#properties"
  },"42": {
    "doc": "Approval Step",
    "title": "Basic Examples",
    "content": "Quest Completion Reward . { kind: 'approval', character: 'Lingxi Gian', amount: '4' } . Disapproval from Poor Choice . { kind: 'approval', character: 'Master Chen', amount: '-2' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/approval.html#basic-examples",
    
    "relUrl": "/events/steps/approval.html#basic-examples"
  },"43": {
    "doc": "Change BGM Step",
    "title": "Change BGM Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changebgm.html",
    
    "relUrl": "/events/steps/changebgm.html"
  },"44": {
    "doc": "Change BGM Step",
    "title": "Introduction",
    "content": "The Change BGM Step overrides the game’s location-based background music system with a specific music track for the duration of an event sequence. This step is essential for creating atmospheric moments, enhancing dramatic scenes, and providing appropriate musical accompaniment for special encounters in your cultivation world. Use this step to set the mood for important story beats, combat encounters, character interactions, or exploration sequences that require specific musical atmosphere beyond what the default location music provides. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changebgm.html#introduction",
    
    "relUrl": "/events/steps/changebgm.html#introduction"
  },"45": {
    "doc": "Change BGM Step",
    "title": "Interface",
    "content": "interface ChangeBGMStep { kind: 'changeBGM'; condition?: string; bgm: MusicName; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changebgm.html#interface",
    
    "relUrl": "/events/steps/changebgm.html#interface"
  },"46": {
    "doc": "Change BGM Step",
    "title": "Properties",
    "content": "Required Properties . kind - Always 'changeBGM' . | Identifies this as a background music change step | . bgm - Music track to play . | Must be a valid MusicName from the game’s music library, or one added via the window.modAPI.action.addBGM function | Overrides location-based music until cleared or event ends | See Available Music Names for complete list | . Optional Properties . condition - Conditional execution . | Flag expression that must be true for the music change to occur | Step is skipped if condition fails | Useful for context-sensitive music based on player state or story progress | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changebgm.html#properties",
    
    "relUrl": "/events/steps/changebgm.html#properties"
  },"47": {
    "doc": "Change BGM Step",
    "title": "Basic Examples",
    "content": "Simple Music Override . { kind: 'changeBGM', bgm: 'Combat' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changebgm.html#basic-examples",
    
    "relUrl": "/events/steps/changebgm.html#basic-examples"
  },"48": {
    "doc": "Change Favour Step",
    "title": "Change Favour Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changefavour.html",
    
    "relUrl": "/events/steps/changefavour.html"
  },"49": {
    "doc": "Change Favour Step",
    "title": "Introduction",
    "content": "The Change Favour Step modifies the player’s sect favour . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changefavour.html#introduction",
    
    "relUrl": "/events/steps/changefavour.html#introduction"
  },"50": {
    "doc": "Change Favour Step",
    "title": "Interface",
    "content": "interface ChangeFavourStep { kind: 'favour'; condition?: string; amount: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changefavour.html#interface",
    
    "relUrl": "/events/steps/changefavour.html#interface"
  },"51": {
    "doc": "Change Favour Step",
    "title": "Properties",
    "content": ". | kind - Always 'favour' . | amount - Favour change expression (positive adds, negative removes) . | condition - Conditional execution (optional) . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changefavour.html#properties",
    
    "relUrl": "/events/steps/changefavour.html#properties"
  },"52": {
    "doc": "Change Favour Step",
    "title": "Examples",
    "content": "{ kind: 'favour', amount: '10' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changefavour.html#examples",
    
    "relUrl": "/events/steps/changefavour.html#examples"
  },"53": {
    "doc": "Change HP Step",
    "title": "Change HP Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changehp.html",
    
    "relUrl": "/events/steps/changehp.html"
  },"54": {
    "doc": "Change HP Step",
    "title": "Introduction",
    "content": "Modifies the player’s current health points, providing damage or healing outside of combat scenarios. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changehp.html#introduction",
    
    "relUrl": "/events/steps/changehp.html#introduction"
  },"55": {
    "doc": "Change HP Step",
    "title": "Interface",
    "content": "interface ChangeHpStep { kind: 'changeHp'; condition?: string; amount: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changehp.html#interface",
    
    "relUrl": "/events/steps/changehp.html#interface"
  },"56": {
    "doc": "Change HP Step",
    "title": "Properties",
    "content": "kind - Always 'changeHp' . amount - Health change expression (positive heals, negative damages) . condition (optional) - Conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changehp.html#properties",
    
    "relUrl": "/events/steps/changehp.html#properties"
  },"57": {
    "doc": "Change HP Step",
    "title": "Examples",
    "content": "Environmental Damage . { kind: 'changeHp', amount: '-2000' } . Healing Effect . { kind: 'changeHp', amount: '5000' } . Percentage-Based Damage . { kind: 'changeHp', amount: '-hp * 0.5' // Lose half current HP } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changehp.html#examples",
    
    "relUrl": "/events/steps/changehp.html#examples"
  },"58": {
    "doc": "Change Location Step",
    "title": "Change Location Step",
    "content": "Moves the player to a different location on the world map. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changelocation.html",
    
    "relUrl": "/events/steps/changelocation.html"
  },"59": {
    "doc": "Change Location Step",
    "title": "Interface",
    "content": "interface ChangeLocationStep { kind: 'location'; condition?: string; location: string; updatePlayerLocation?: boolean; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changelocation.html#interface",
    
    "relUrl": "/events/steps/changelocation.html#interface"
  },"60": {
    "doc": "Change Location Step",
    "title": "Properties",
    "content": "kind - Always 'location' . location - Name of destination location. condition (optional) - Flag expression that must evaluate to true for the step to execute. updatePlayerLocation (optional) - Whether to update the player’s current location. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changelocation.html#properties",
    
    "relUrl": "/events/steps/changelocation.html#properties"
  },"61": {
    "doc": "Change Location Step",
    "title": "Examples",
    "content": "Temporary location change for duration of event . { kind: 'changeLocation', location: 'Sect Grounds' } . Actual Location Change . { kind: 'location', location: 'Mountain Peak', updatePlayerLocation: true } . Conditional Travel . { kind: 'location', condition: 'has_travel_pass == 1', location: 'Forbidden Valley', updatePlayerLocation: true } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changelocation.html#examples",
    
    "relUrl": "/events/steps/changelocation.html#examples"
  },"62": {
    "doc": "Change Reputation Step",
    "title": "Change Reputation Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changereputation.html",
    
    "relUrl": "/events/steps/changereputation.html"
  },"63": {
    "doc": "Change Reputation Step",
    "title": "Introduction",
    "content": "The Change Reputation Step modifies the player’s reputation with various factions, affecting interactions and available content. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changereputation.html#introduction",
    
    "relUrl": "/events/steps/changereputation.html#introduction"
  },"64": {
    "doc": "Change Reputation Step",
    "title": "Interface",
    "content": "interface ChangeReputationStep { kind: 'reputation'; condition?: string; amount: string; name: string; max?: ReputationTier; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changereputation.html#interface",
    
    "relUrl": "/events/steps/changereputation.html#interface"
  },"65": {
    "doc": "Change Reputation Step",
    "title": "Properties",
    "content": ". | kind - Always 'reputation' . | amount - Reputation change expression . | name - Faction or group name, often the name of the settlement in question . | max - Maximum reputation tier to cap at (optional) . | condition - Conditional execution (optional) . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changereputation.html#properties",
    
    "relUrl": "/events/steps/changereputation.html#properties"
  },"66": {
    "doc": "Change Reputation Step",
    "title": "Examples",
    "content": "{ kind: 'reputation', name: 'Nine Mountain Sect', amount: '5' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changereputation.html#examples",
    
    "relUrl": "/events/steps/changereputation.html#examples"
  },"67": {
    "doc": "Change Screen Step",
    "title": "Change Screen Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changescreen.html",
    
    "relUrl": "/events/steps/changescreen.html"
  },"68": {
    "doc": "Change Screen Step",
    "title": "Introduction",
    "content": "The Change Screen Step navigates the player to a different game screen, seamlessly transitioning them between various game interfaces such as research facilities, markets, cultivation areas, and more. This step is essential for creating smooth gameplay flow and directing players to specific game functionalities as part of your event narrative. Use this step when your events need to automatically take players to relevant screens - like opening the research interface after discovering a new facility, or taking them to the market after meeting a merchant. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changescreen.html#introduction",
    
    "relUrl": "/events/steps/changescreen.html#introduction"
  },"69": {
    "doc": "Change Screen Step",
    "title": "Interface",
    "content": "interface ChangeScreenStep { kind: 'changeScreen'; condition?: string; screen: GameScreen; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changescreen.html#interface",
    
    "relUrl": "/events/steps/changescreen.html#interface"
  },"70": {
    "doc": "Change Screen Step",
    "title": "Properties",
    "content": "Required Properties . kind - Always 'changeScreen' . | Identifies this as a screen navigation step | . screen - Target game screen . | Specifies which game screen to navigate to | Must be a valid GameScreen value | See Available Screens section below for complete list | . Optional Properties . condition - Conditional execution . | Flag expression that must evaluate to true for the step to execute | Step is skipped if condition fails | Useful for only changing screens based on player state or story progression | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changescreen.html#properties",
    
    "relUrl": "/events/steps/changescreen.html#properties"
  },"71": {
    "doc": "Change Screen Step",
    "title": "Available Screens",
    "content": "The following screens are available for navigation: . | Screen | Description | . | 'location' | Main location screen (default) | . | 'recipe' | Recipe crafting interface | . | 'mission' | Mission and quest management | . | 'craftingHall' | Crafting hall interface | . | 'manual' | Technique manual and skills | . | 'cultivation' | Cultivation and breakthrough screen | . | 'map' | World map navigation | . | 'healer' | Healer services and recovery | . | 'market' | Trading and commerce interface | . | 'favour' | Reputation and favour management | . | 'herbField' | Herb gathering and farming | . | 'mine' | Mining operations | . | 'recipeLibrary' | Recipe collection browser | . | 'requestBoard' | Quest and mission board | . | 'compendium' | Knowledge and lore collection | . | 'library' | Texts and research materials | . | 'altar' | Altar interactions and rituals | . | 'research' | Research facilities and experiments | . | 'pillarGrid' | Formation and pillar arrangements | . | 'fallenStar' | Fallen star events and rewards | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changescreen.html#available-screens",
    
    "relUrl": "/events/steps/changescreen.html#available-screens"
  },"72": {
    "doc": "Change Screen Step",
    "title": "Basic Examples",
    "content": "Navigate to Research Facility . { kind: 'changeScreen', screen: 'research' } . Open Market Interface . { kind: 'changeScreen', screen: 'market' } . Facility Discovery . After players discover or unlock new facilities, automatically navigate them to the relevant screen: . [ { kind: 'text', text: 'The doors of the ancient library creak open, revealing countless scrolls and tomes filled with cultivation wisdom.', }, { kind: 'unlockLocation', location: 'Ancient Library', }, { kind: 'changeScreen', screen: 'library', }, ]; . Cultivation Breakthrough . Guide players to cultivation screen for important spiritual development: . [ { kind: 'text', text: 'Your spiritual energy surges as you feel yourself on the verge of a breakthrough. The time has come to advance your cultivation.', }, { kind: 'changeScreen', condition: 'realm &gt;= 3', screen: 'cultivation', }, ]; . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/changescreen.html#basic-examples",
    
    "relUrl": "/events/steps/changescreen.html#basic-examples"
  },"73": {
    "doc": "Choice Step",
    "title": "Choice Step",
    "content": "Presents players with decision options that branch storylines and create interactive experiences. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/choice.html",
    
    "relUrl": "/events/steps/choice.html"
  },"74": {
    "doc": "Choice Step",
    "title": "Interface",
    "content": "interface ChoiceStep { kind: 'choice'; condition?: string; choices: ChoiceStepChoice[]; } interface ChoiceStepChoice { text: string; showCondition?: string; condition?: EventChoiceCondition; hideIfDisabled?: boolean; children: EventStep[]; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/choice.html#interface",
    
    "relUrl": "/events/steps/choice.html#interface"
  },"75": {
    "doc": "Choice Step",
    "title": "Properties",
    "content": "kind - Always 'choice' . condition (optional) - Flag expression that must be true for the entire choice step to appear. choices - Array of choice options available to the player. ChoiceStepChoice Properties . text - Display text shown to the player for this choice. showCondition (optional) - Flag expression controlling whether this choice appears in the menu. condition (optional) - Structured requirement condition (realm, stats, items, etc.) that determines if the choice is available. hideIfDisabled (optional) - If true, hide choices with failed conditions; if false, show as grayed-out. children - Event steps that execute when this choice is selected. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/choice.html#properties",
    
    "relUrl": "/events/steps/choice.html#properties"
  },"76": {
    "doc": "Choice Step",
    "title": "Examples",
    "content": "Basic Choice . { kind: 'choice', choices: [ { text: 'Be respectful and bow deeply', children: [ { kind: 'text', text: 'You bow politely to the elder, showing proper respect.' }, { kind: 'flag', flag: 'respectfulApproach', value: '1', global: true } ] }, { text: 'Stand proudly and assert your strength', children: [ { kind: 'text', text: 'You stand tall, meeting the elder\\'s gaze with determination.' }, { kind: 'flag', flag: 'defiantApproach', value: '1', global: true } ] } ] } . Conditional Choice . { kind: 'choice', choices: [ { text: 'Demonstrate advanced cultivation technique (Core Formation+)', condition: { kind: 'realm', realm: 'coreFormation', mode: 'more' }, children: [ { kind: 'text', text: 'Your demonstration leaves the audience in awe.' }, { kind: 'favour', amount: '20' } ] }, { text: 'Share basic cultivation insights', children: [ { kind: 'text', text: 'You offer fundamental cultivation advice.' }, { kind: 'favour', amount: '5' } ] } ] } . Item Requirement Choice . { kind: 'choice', choices: [ { text: 'Offer Spirit Grass as payment (Requires 5)', condition: { kind: 'item', item: { name: 'Spirit Grass' }, amount: 5 }, children: [ { kind: 'removeItem', item: { name: 'Spirit Grass' }, amount: '5' }, { kind: 'addItem', item: { name: 'Rare Manual' }, amount: '1' } ] }, { text: 'Pay 1000 Spirit Stones', condition: { kind: 'money', amount: 1000 }, children: [ { kind: 'money', amount: '-1000' }, { kind: 'addItem', item: { name: 'Rare Manual' }, amount: '1' } ] } ] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/choice.html#examples",
    
    "relUrl": "/events/steps/choice.html#examples"
  },"77": {
    "doc": "Choice Step",
    "title": "Condition Types",
    "content": "Available condition types: realm, physicalStatistic, socialStatistic, item, money, favour, qi, buff, affinity, reputation, multiple. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/choice.html#condition-types",
    
    "relUrl": "/events/steps/choice.html#condition-types"
  },"78": {
    "doc": "Clear Change BGM Step",
    "title": "Clear Change BGM Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearchangebgm.html",
    
    "relUrl": "/events/steps/clearchangebgm.html"
  },"79": {
    "doc": "Clear Change BGM Step",
    "title": "Introduction",
    "content": "The Clear Change BGM Step removes any active music override set by previous ChangeBGMStep actions, allowing the game’s natural location-based background music system to resume control. This step provides a clean way to end special musical segments within events and return to ambient gameplay music. This step is commonly used to conclude dramatic moments, special encounters, or narrative sequences that required specific musical accompaniment, smoothly transitioning back to the environmental audio that matches the player’s current location. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearchangebgm.html#introduction",
    
    "relUrl": "/events/steps/clearchangebgm.html#introduction"
  },"80": {
    "doc": "Clear Change BGM Step",
    "title": "Interface",
    "content": "interface ClearChangeBGMStep { kind: 'clearChangeBGM'; condition?: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearchangebgm.html#interface",
    
    "relUrl": "/events/steps/clearchangebgm.html#interface"
  },"81": {
    "doc": "Clear Change BGM Step",
    "title": "Properties",
    "content": "Required Properties . kind - Always 'clearChangeBGM' . | Identifies this as a music override clearing step | . Optional Properties . condition - Conditional execution . | Flag expression that must be true for the override to be cleared | Step is skipped if condition fails | Useful for conditional music management based on player state or story progress | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearchangebgm.html#properties",
    
    "relUrl": "/events/steps/clearchangebgm.html#properties"
  },"82": {
    "doc": "Clear Change BGM Step",
    "title": "Examples",
    "content": "Simple Override Clearing . { kind: 'clearChangeBGM'; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearchangebgm.html#examples",
    
    "relUrl": "/events/steps/clearchangebgm.html#examples"
  },"83": {
    "doc": "Clear Character Step",
    "title": "Clear Character Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearcharacter.html",
    
    "relUrl": "/events/steps/clearcharacter.html"
  },"84": {
    "doc": "Clear Character Step",
    "title": "Introduction",
    "content": "Clears the active character from the current event location. Usually used after the character has left the conversation narratively to remove their image from the screen . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearcharacter.html#introduction",
    
    "relUrl": "/events/steps/clearcharacter.html#introduction"
  },"85": {
    "doc": "Clear Character Step",
    "title": "Interface",
    "content": "interface ClearCharacterStep { kind: 'clearCharacter'; condition?: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearcharacter.html#interface",
    
    "relUrl": "/events/steps/clearcharacter.html#interface"
  },"86": {
    "doc": "Clear Character Step",
    "title": "Properties",
    "content": ". | kind - Always 'clearCharacter' | condition (optional) - Conditional execution | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearcharacter.html#properties",
    
    "relUrl": "/events/steps/clearcharacter.html#properties"
  },"87": {
    "doc": "Clear Character Step",
    "title": "Examples",
    "content": "Basic Character Clearing . { kind: 'clearCharacter'; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearcharacter.html#examples",
    
    "relUrl": "/events/steps/clearcharacter.html#examples"
  },"88": {
    "doc": "Clear Team Up Step",
    "title": "Clear Team Up Step",
    "content": "The Clear Team Up Step removes all current team-up partners, returning the player to solo status. It provides closure to collaborative experiences and manages transitions where allies must part ways. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearteamup.html",
    
    "relUrl": "/events/steps/clearteamup.html"
  },"89": {
    "doc": "Clear Team Up Step",
    "title": "Interface",
    "content": "interface ClearTeamUpStep { kind: 'clearTeamUp'; condition?: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearteamup.html#interface",
    
    "relUrl": "/events/steps/clearteamup.html#interface"
  },"90": {
    "doc": "Clear Team Up Step",
    "title": "Properties",
    "content": "kind - Always 'clearTeamUp' . condition (optional) - Flag expression for conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearteamup.html#properties",
    
    "relUrl": "/events/steps/clearteamup.html#properties"
  },"91": {
    "doc": "Clear Team Up Step",
    "title": "Examples",
    "content": "Mission Completion . [ { kind: 'text', text: 'With the mission complete, your companions bid you farewell.', }, { kind: 'clearTeamUp', }, ]; . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/clearteamup.html#examples",
    
    "relUrl": "/events/steps/clearteamup.html#examples"
  },"92": {
    "doc": "Combat Step",
    "title": "Combat Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/combat.html",
    
    "relUrl": "/events/steps/combat.html"
  },"93": {
    "doc": "Combat Step",
    "title": "Introduction",
    "content": "Initiates turn-based combat encounters with specified enemies and branching outcomes. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/combat.html#introduction",
    
    "relUrl": "/events/steps/combat.html#introduction"
  },"94": {
    "doc": "Combat Step",
    "title": "Interface",
    "content": "interface CombatStep { kind: 'combat'; condition?: string; enemies: EnemyEntity[]; playerBuffs?: Buff[]; numEnemies?: number; isSpar?: boolean; bgm?: string[]; victory: EventStep[]; defeat: EventStep[]; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/combat.html#interface",
    
    "relUrl": "/events/steps/combat.html#interface"
  },"95": {
    "doc": "Combat Step",
    "title": "Properties",
    "content": ". | kind - Always 'combat' . | enemies - Array of enemy entities to fight. Either the full list to fight, or the pool to draw from if numEnemies is set. | playerBuffs (optional) - Buffs to apply to the player . | numEnemies (optional) - Number of enemies to spawn. If set, will select this number randomly from the enemies pool . | isSpar (optional) - Whether this is a sparring match . | bgm (optional) - Background music for combat . | victory - Steps to execute on victory . | defeat - Steps to execute on defeat . | condition (optional) - Conditional execution . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/combat.html#properties",
    
    "relUrl": "/events/steps/combat.html#properties"
  },"96": {
    "doc": "Combat Step",
    "title": "Examples",
    "content": "Basic Combat . { kind: 'combat', enemies: [ mountainBear ], victory: [ { kind: 'text', text: 'You defeated the mountain bear!' }, { kind: 'addItem', item: { name: 'BearHide' }, amount: '1' } ], defeat: [ { kind: 'text', text: 'The bear overpowers you.' }, ] } . Horde battle . { kind: 'combat', enemies: [ ratascar, ratascar, ratascar ], victory: [ { kind: 'text', text: 'You defeat the swarm of ratascar' }, ], defeat: [ { kind: 'text', text: 'The swarm overwhelms you and you flee' }, ] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/combat.html#examples",
    
    "relUrl": "/events/steps/combat.html#examples"
  },"97": {
    "doc": "Combat Step",
    "title": "Randomised group",
    "content": "{ kind: 'combat', enemies: [ ratascar, gorashi, xingKulei, stellarShard, gravityAnomaly ], numEnemies: 2, victory: [ { kind: 'text', text: 'You defeat the pair of beasts' }, ], defeat: [ { kind: 'text', text: 'You lose and run' }, ] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/combat.html#randomised-group",
    
    "relUrl": "/events/steps/combat.html#randomised-group"
  },"98": {
    "doc": "Conditional Step",
    "title": "Conditional Step",
    "content": "Executes different step sequences based on game state conditions, enabling dynamic, responsive events. Only the FIRST matching branch will run. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/conditional.html",
    
    "relUrl": "/events/steps/conditional.html"
  },"99": {
    "doc": "Conditional Step",
    "title": "Interface",
    "content": "interface ConditionalStep { kind: 'conditional'; condition?: string; branches: { condition: string; children: EventStep[] }[]; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/conditional.html#interface",
    
    "relUrl": "/events/steps/conditional.html#interface"
  },"100": {
    "doc": "Conditional Step",
    "title": "Properties",
    "content": "kind - Always 'conditional' . condition (optional) - Flag expression that must evaluate to true for the step to execute. branches - Array of conditional branches. Each branch has a condition string and children array of steps to execute if the condition is true. Only the first branch with a true condition will run . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/conditional.html#properties",
    
    "relUrl": "/events/steps/conditional.html#properties"
  },"101": {
    "doc": "Conditional Step",
    "title": "Examples",
    "content": "Simple Conditional override . { kind: 'conditional', branches: [ { condition: 'realm &gt;= 3', children: [ { kind: 'text', text: 'Your cultivation is sufficient for this challenge.' } ] }, { condition: '1', children: [ { kind: 'text', text: 'You need more cultivation to proceed safely.' } ] } ] } . Multiple Branches . { kind: 'conditional', branches: [ { condition: 'realm &gt;= 5', children: [ { kind: 'speech', character: 'Elder', text: 'A true powerhouse! Welcome, honored one.' } ] }, { condition: 'realm &gt;= coreFormation', children: [ { kind: 'speech', character: 'Elder', text: 'A Core Formation cultivator. Impressive.' } ] }, { condition: '1', children: [ { kind: 'speech', character: 'Elder', text: 'Still in the early stages. Keep training.' } ] } ] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/conditional.html#examples",
    
    "relUrl": "/events/steps/conditional.html#examples"
  },"102": {
    "doc": "Consume Buff Step",
    "title": "Consume Buff Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/consumebuff.html",
    
    "relUrl": "/events/steps/consumebuff.html"
  },"103": {
    "doc": "Consume Buff Step",
    "title": "Introduction",
    "content": "The Consume Buff Step removes or reduces active buffs by specified amounts. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/consumebuff.html#introduction",
    
    "relUrl": "/events/steps/consumebuff.html#introduction"
  },"104": {
    "doc": "Consume Buff Step",
    "title": "Interface",
    "content": "interface ConsumeBuffStep { kind: 'consumeBuff'; condition?: string; buff: Buff; amount: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/consumebuff.html#interface",
    
    "relUrl": "/events/steps/consumebuff.html#interface"
  },"105": {
    "doc": "Consume Buff Step",
    "title": "Properties",
    "content": ". | kind - Always 'consumeBuff' . | buff - Buff object to consume . | amount - Amount to consume as expression string . | condition - Conditional execution (optional) . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/consumebuff.html#properties",
    
    "relUrl": "/events/steps/consumebuff.html#properties"
  },"106": {
    "doc": "Consume Buff Step",
    "title": "Examples",
    "content": "{ kind: 'consumeBuff', buff: favourOfTheAscender, amount: '10' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/consumebuff.html#examples",
    
    "relUrl": "/events/steps/consumebuff.html#examples"
  },"107": {
    "doc": "Crafting Step",
    "title": "Crafting Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/crafting.html",
    
    "relUrl": "/events/steps/crafting.html"
  },"108": {
    "doc": "Crafting Step",
    "title": "Introduction",
    "content": "The Crafting Step initiates crafting challenges with different branches based on the results. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/crafting.html#introduction",
    
    "relUrl": "/events/steps/crafting.html#introduction"
  },"109": {
    "doc": "Crafting Step",
    "title": "Interface",
    "content": "interface CraftingStep { kind: 'crafting'; condition?: string; recipe: string; basicCraftSkill: number; perfectCraftSkill: number; sublimeCraftSkill?: number; sublime?: EventStep[]; perfect: EventStep[]; basic: EventStep[]; failed: EventStep[]; useCurrentBackground?: boolean; buffs?: CraftingBuff[]; forceSublimeCrafting?: boolean; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/crafting.html#interface",
    
    "relUrl": "/events/steps/crafting.html#interface"
  },"110": {
    "doc": "Crafting Step",
    "title": "Properties",
    "content": ". | kind - Always 'crafting' . | recipe - Recipe identifier to craft . | basicCraftSkill - Craft skill given on basic result . | perfectCraftSkill - Craft skill given on perfect result . | sublimeCraftSkill - Craft skill given on sublime result (optional) . | sublime - Steps for sublime outcome (optional) . | perfect - Steps for perfect outcome . | basic - Steps for basic success . | failed - Steps for failed crafting . | useCurrentBackground - Keep current screen background (optional) . | buffs - Applied crafting buffs (optional) . | forceSublimeCrafting - Force sublime crafting mode (optional) . | condition - Conditional execution (optional) . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/crafting.html#properties",
    
    "relUrl": "/events/steps/crafting.html#properties"
  },"111": {
    "doc": "Crafting Step",
    "title": "Examples",
    "content": "{ kind: 'crafting', recipe: healingPillIRecipe, basicCraftSkill: 0, perfectCraftSkill: 1, perfect: [{ kind: 'text', text: 'Perfect pill created!' }], basic: [{ kind: 'text', text: 'Basic pill created.' }], failed: [{ kind: 'text', text: 'Crafting failed.' }] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/crafting.html#examples",
    
    "relUrl": "/events/steps/crafting.html#examples"
  },"112": {
    "doc": "Craft Skill Step",
    "title": "Craft Skill Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/craftskill.html",
    
    "relUrl": "/events/steps/craftskill.html"
  },"113": {
    "doc": "Craft Skill Step",
    "title": "Introduction",
    "content": "The Craft Skill Step increases the player’s craft skill. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/craftskill.html#introduction",
    
    "relUrl": "/events/steps/craftskill.html#introduction"
  },"114": {
    "doc": "Craft Skill Step",
    "title": "Interface",
    "content": "interface CraftSkillStep { kind: 'craftSkill'; condition?: string; amount: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/craftskill.html#interface",
    
    "relUrl": "/events/steps/craftskill.html#interface"
  },"115": {
    "doc": "Craft Skill Step",
    "title": "Properties",
    "content": "kind - Always 'craftSkill' . amount - Skill increase expression . | String expression that evaluates to the craft skill amount to add | . condition (optional) - Conditional execution . | Flag expression that must be true for skill gain to occur | Step is skipped if condition fails | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/craftskill.html#properties",
    
    "relUrl": "/events/steps/craftskill.html#properties"
  },"116": {
    "doc": "Craft Skill Step",
    "title": "Examples",
    "content": "{ kind: 'craftSkill', amount: '3' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/craftskill.html#examples",
    
    "relUrl": "/events/steps/craftskill.html#examples"
  },"117": {
    "doc": "Craft With Character Step",
    "title": "Craft With Character Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/craftwithcharacter.html",
    
    "relUrl": "/events/steps/craftwithcharacter.html"
  },"118": {
    "doc": "Craft With Character Step",
    "title": "Introduction",
    "content": "Opens the crafting interface with a specific character for collaborative crafting. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/craftwithcharacter.html#introduction",
    
    "relUrl": "/events/steps/craftwithcharacter.html#introduction"
  },"119": {
    "doc": "Craft With Character Step",
    "title": "Interface",
    "content": "interface CraftWithCharacterStep { kind: 'craftWithCharacter'; condition?: string; character: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/craftwithcharacter.html#interface",
    
    "relUrl": "/events/steps/craftwithcharacter.html#interface"
  },"120": {
    "doc": "Craft With Character Step",
    "title": "Properties",
    "content": ". | kind - Always 'craftWithCharacter' . | character - Character to craft with . | condition (optional) - Conditional execution . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/craftwithcharacter.html#properties",
    
    "relUrl": "/events/steps/craftwithcharacter.html#properties"
  },"121": {
    "doc": "Craft With Character Step",
    "title": "Examples",
    "content": "Basic Collaborative Crafting . { kind: 'craftWithCharacter', character: 'MasterCraftsman' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/craftwithcharacter.html#examples",
    
    "relUrl": "/events/steps/craftwithcharacter.html#examples"
  },"122": {
    "doc": "Create Buff Step",
    "title": "Create Buff Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/createbuff.html",
    
    "relUrl": "/events/steps/createbuff.html"
  },"123": {
    "doc": "Create Buff Step",
    "title": "Introduction",
    "content": "The Create Buff Step applies buffs to the player with specified amounts and persistence options. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/createbuff.html#introduction",
    
    "relUrl": "/events/steps/createbuff.html#introduction"
  },"124": {
    "doc": "Create Buff Step",
    "title": "Interface",
    "content": "interface CreateBuffStep { kind: 'createBuff'; condition?: string; buff: Buff; amount: string; persistBeyondEvent?: boolean; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/createbuff.html#interface",
    
    "relUrl": "/events/steps/createbuff.html#interface"
  },"125": {
    "doc": "Create Buff Step",
    "title": "Properties",
    "content": ". | kind - Always 'createBuff' . | buff - Buff object to create . | amount - Amount expression as string . | persistBeyondEvent - Whether buff persists beyond the event. If true, each stack will last for 1 day (optional) . | condition - Conditional execution (optional) . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/createbuff.html#properties",
    
    "relUrl": "/events/steps/createbuff.html#properties"
  },"126": {
    "doc": "Create Buff Step",
    "title": "Examples",
    "content": "{ kind: 'createBuff', buff: 'meditation_focus', amount: '1' } . { kind: 'createBuff', buff: 'blessed_cultivation', amount: 'playerRealm * 5', persistBeyondEvent: true } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/createbuff.html#examples",
    
    "relUrl": "/events/steps/createbuff.html#examples"
  },"127": {
    "doc": "Drop Item Step",
    "title": "Drop Item Step",
    "content": "The Drop Item Step provides players with a random selection of items from a larger pool. It’s perfect for loot systems, treasure chests, combat rewards, and repeatable events. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/dropitem.html",
    
    "relUrl": "/events/steps/dropitem.html"
  },"128": {
    "doc": "Drop Item Step",
    "title": "Interface",
    "content": "interface DropItemStep { kind: 'dropItem'; condition?: string; items: { item: ItemDesc; amount: string }[]; count: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/dropitem.html#interface",
    
    "relUrl": "/events/steps/dropitem.html#interface"
  },"129": {
    "doc": "Drop Item Step",
    "title": "Properties",
    "content": "kind - Always 'dropItem' . items - Array of possible items that can be randomly selected . count - Number of items to randomly select from the pool . condition (optional) - Flag expression for conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/dropitem.html#properties",
    
    "relUrl": "/events/steps/dropitem.html#properties"
  },"130": {
    "doc": "Drop Item Step",
    "title": "Examples",
    "content": "Simple Treasure Chest . { kind: 'dropItem', items: [ { item: { name: 'Spirit Stone' }, amount: '5' }, { item: { name: 'Healing Pill' }, amount: '2' }, { item: { name: 'Ancient Coin' }, amount: '10' } ], count: '2' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/dropitem.html#examples",
    
    "relUrl": "/events/steps/dropitem.html#examples"
  },"131": {
    "doc": "Dual Cultivation Step",
    "title": "Dual Cultivation Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/dualcultivation.html",
    
    "relUrl": "/events/steps/dualcultivation.html"
  },"132": {
    "doc": "Dual Cultivation Step",
    "title": "Introduction",
    "content": "The Dual Cultivation Step initiates intimate cultivation sessions between partners with compatibility testing and branching outcomes. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/dualcultivation.html#introduction",
    
    "relUrl": "/events/steps/dualcultivation.html#introduction"
  },"133": {
    "doc": "Dual Cultivation Step",
    "title": "Interface",
    "content": "interface DualCultivationStep { kind: 'dualCultivation'; condition?: string; character: string; traits: IntimateTrait[]; success: EventStep[]; failure: EventStep[]; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/dualcultivation.html#interface",
    
    "relUrl": "/events/steps/dualcultivation.html#interface"
  },"134": {
    "doc": "Dual Cultivation Step",
    "title": "Properties",
    "content": ". | kind - Always 'dualCultivation' . | character - Partner character for dual cultivation . | traits - Array of intimate traits to test compatibility . | success - Steps to execute on successful cultivation . | failure - Steps to execute on failed cultivation . | condition (optional) - Conditional execution requirements . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/dualcultivation.html#properties",
    
    "relUrl": "/events/steps/dualcultivation.html#properties"
  },"135": {
    "doc": "Dual Cultivation Step",
    "title": "Examples",
    "content": "Basic Dual Cultivation . { kind: 'dualCultivation', character: 'Pi Lip', traits: ['passionate', 'focused'], success: [ { kind: 'text', text: 'Your cultivation energies harmonize perfectly.' }, { kind: 'qi', amount: '100' } ], failure: [ { kind: 'text', text: 'The cultivation session yields poor results.' } ] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/dualcultivation.html#examples",
    
    "relUrl": "/events/steps/dualcultivation.html#examples"
  },"136": {
    "doc": "Event Steps",
    "title": "Event Steps",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/event-steps.html",
    
    "relUrl": "/events/event-steps.html"
  },"137": {
    "doc": "Event Steps",
    "title": "Introduction",
    "content": "Event Steps are the fundamental building blocks of Events. Each step represents a single action or interaction that occurs during an event sequence - from displaying text and dialogue to modifying game state and triggering complex interactions. Understanding event steps is essential for creating rich, interactive content. They provide the granular control needed to craft everything from simple conversations to complex, branching storylines. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/event-steps.html#introduction",
    
    "relUrl": "/events/event-steps.html#introduction"
  },"138": {
    "doc": "Event Steps",
    "title": "Core Step Properties",
    "content": "Most event steps share these fundamental properties: . Condition System . All steps can have an optional condition that must evaluate to true for the step to execute: . { kind: 'text', condition: 'realm &gt;= coreFormation', // Only execute if Core Formation or higher text: 'Your advanced cultivation reveals hidden meanings in the text.' } . Condition Examples: . condition: 'muscles &gt;= 15'; // Stat requirement condition: 'hasKeyItem == 1'; // Item possession condition: 'questComplete == 0'; // Quest status condition: 'realm &gt;= coreFormation &amp;&amp; visited == 0'; // Multiple conditions condition: 'yearMonth &gt;= 6 &amp;&amp; yearMonth &lt;= 8'; // Time-based . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/event-steps.html#core-step-properties",
    
    "relUrl": "/events/event-steps.html#core-step-properties"
  },"139": {
    "doc": "Event Steps",
    "title": "Step Execution Flow",
    "content": "Sequential Processing . Steps execute sequentially in the order they appear in the steps array: . steps: [ { kind: 'text', text: 'You approach the ancient door...' }, // Step 1 { kind: 'text', text: 'Mystical runes glow as you near...' }, // Step 2 { kind: 'speech', character: 'Guardian', text: `\"State your purpose!\"` }, // Step 3 { kind: 'choice', choices: [...] } // Step 4 ] . When executing nested groups of steps, it will fall through the remaining steps at a higher level once the child steps are completed. steps: [ { kind: 'text', text: 'Step 1' }, { kind: 'choice', choices: [ { text: 'Option 1', children: [ { kind: 'text', text: 'Step 2' }, { kind: 'text', text: 'Step 3' }, ], }, ], }, { kind: 'text', text: 'Step 4' }, ]; . Conditional Execution . Steps with failing conditions are automatically skipped: . steps: [ { kind: 'text', text: 'You enter the temple chamber.' }, // Always executes { kind: 'text', condition: 'hasBlessing == 1', // Only if blessed text: 'The sacred statues bow in recognition of your blessing.', }, { kind: 'text', text: 'You proceed deeper into the temple.' }, // Always executes ]; . Branching with Choices . Choice steps create branches - different execution paths through the event: . { kind: 'choice', choices: [ { text: 'Show respect and bow deeply', children: [ { kind: 'text', text: 'Your respectful gesture is appreciated.' }, { kind: 'flag', flag: 'respect', value: 'respect + 1', global: true } ] }, { text: 'Stand proudly and assert your strength', condition: 'muscles &gt;= 15', // Only available if strong enough children: [ { kind: 'text', text: 'Your power commands immediate attention.' }, { kind: 'flag', flag: 'dominance', value: 'dominance + 1', global: true } ] }, { text: 'Remain silent and observe', children: [ { kind: 'text', text: 'You learn much by watching and listening.' }, { kind: 'flag', flag: 'wisdom', value: 'wisdom + 1', global: true } ] } ] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/event-steps.html#step-execution-flow",
    
    "relUrl": "/events/event-steps.html#step-execution-flow"
  },"140": {
    "doc": "Event Steps",
    "title": "Advanced Patterns",
    "content": "Nested Conditionals . Create complex logic with nested conditional steps: . { kind: 'conditional', branches: [ { condition: 'realm &gt;= 4', // Nascent Soul or higher children: [ { kind: 'conditional', branches: [ { condition: 'visitedAncientLibrary == 1', children: [ { kind: 'text', text: 'Your combined knowledge and power reveal hidden secrets.' } ] }, { condition: '1', // Default for high realm children: [ { kind: 'text', text: 'Your cultivation allows deep understanding.' } ] } ] } ] }, { condition: '1', // Default for lower realms children: [ { kind: 'text', text: 'The concepts seem beyond your current understanding.' } ] } ] } . Dynamic Content Generation . Use step sequences that adapt to player state: . // Generate different rewards based on player's school affinity { kind: 'conditional', branches: [ { condition: 'fist &gt;= weapon &amp;&amp; fist &gt;= blossom', children: [ { kind: 'addItem', item: 'Fist Technique Manual', amount: 1 }, { kind: 'text', text: 'The manual resonates with your fist cultivation.' } ] }, { condition: 'weapon &gt;= blossom', children: [ { kind: 'addItem', item: 'Weapon Crafting Guide', amount: 1 }, { kind: 'text', text: 'The guide enhances your weapon mastery.' } ] }, { condition: '1', // Default to blossom children: [ { kind: 'addItem', item: 'Nature Harmony Scroll', amount: 1 }, { kind: 'text', text: 'The scroll deepens your connection to nature.' } ] } ] } . Continue to: Event Step Types for detailed documentation on each individual step type. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/event-steps.html#advanced-patterns",
    
    "relUrl": "/events/event-steps.html#advanced-patterns"
  },"141": {
    "doc": "Events",
    "title": "Events",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/events.html",
    
    "relUrl": "/events/events.html"
  },"142": {
    "doc": "Events",
    "title": "Introduction",
    "content": "Events are the primary system for creating interactive content in Ascend from Nine Mountains. They control dialogue, character interactions, storylines, and all dynamic gameplay moments that make the cultivation journey engaging and personal. Think of events as scripted sequences that can display text, present choices, modify game state, trigger combat, and create the rich narrative experiences that define your mod’s unique story. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/events.html#introduction",
    
    "relUrl": "/events/events.html#introduction"
  },"143": {
    "doc": "Events",
    "title": "What Events Are",
    "content": "An Event is a sequence of steps that execute in order to create an interactive experience. Events can: . | Display narrative text and character dialogue | Present meaningful choices to the player | Give or take items and resources | Trigger combat encounters and challenges | Modify game state through flags and conditions | Change locations and unlock new content | Control the flow of story and gameplay | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/events.html#what-events-are",
    
    "relUrl": "/events/events.html#what-events-are"
  },"144": {
    "doc": "Events",
    "title": "Event Structure",
    "content": "GameEvent Interface . The core event definition containing the actual interactive content: . interface GameEvent { location: string; // Where this event takes place steps: EventStep[]; // The sequence of actions to perform onCompleteFlags?: { flag: string; value: number }[]; // Flags set when event ends } . Key Components: . | location: Defines where the event occurs (for context and validation) | steps: Array of actions that execute sequentially to create the experience | onCompleteFlags: Optional flags set automatically when the event finishes | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/events.html#event-structure",
    
    "relUrl": "/events/events.html#event-structure"
  },"145": {
    "doc": "Events",
    "title": "Deep Dive: Event Mechanics",
    "content": "Step Execution Flow . Events execute their steps sequentially in array order: . const myEvent: GameEvent = { location: 'Ancient Library', steps: [ { kind: 'text', text: 'Dust motes dance in the filtered sunlight...' }, // Step 1 { kind: 'text', text: 'You approach the ancient tome...' }, // Step 2 { kind: 'speech', character: 'Librarian', text: 'Careful with that!' }, // Step 3 { kind: 'choice', choices: [...] } // Step 4 ] }; . Conditional Execution . Steps can include conditions that control when they execute: . { kind: 'text', condition: 'realm &gt;= 3', // Only execute if Core Formation or higher text: 'Your advanced cultivation allows you to sense the tome\\'s power.' } . Steps with failing conditions are skipped, allowing dynamic content that adapts to player state. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/events.html#deep-dive-event-mechanics",
    
    "relUrl": "/events/events.html#deep-dive-event-mechanics"
  },"146": {
    "doc": "Events",
    "title": "How Events Are Started",
    "content": "Events can be triggered through multiple pathways: . Triggered Events . Automatic events that fire based on conditions and player location - see Triggered Events . Character Interactions . Events started by talking to, trading with, or fighting NPCs . Location Events . Events built into location definitions that activate when visiting . Quest Steps . Events as part of quest progression and storyline advancement . Item Usage . Events triggered by using consumable items or special artifacts . Calendar Events . Time-based events that occur on specific dates or seasons . Nested Events . Events can start other events as part of their step sequence . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/events.html#how-events-are-started",
    
    "relUrl": "/events/events.html#how-events-are-started"
  },"147": {
    "doc": "Events",
    "title": "Practical Examples",
    "content": "Simple Dialogue Event . const greetingEvent: GameEvent = { location: 'Village Square', steps: [ { kind: 'speech', character: 'Village Elder', text: 'Welcome, young cultivator. What brings you to our humble village?', }, { kind: 'choice', choices: [ { text: 'I seek wisdom and guidance', children: [ { kind: 'speech', character: 'Village Elder', text: 'Wisdom comes to those who listen. Stay awhile and learn.', }, ], }, { text: 'I am just passing through', children: [ { kind: 'speech', character: 'Village Elder', text: 'Safe travels, wanderer. May your path be clear.', }, ], }, ], }, ], }; . Complex Storyline Event . const mysteriousTome: GameEvent = { location: 'Crystal Shore', steps: [ { kind: 'text', text: 'You discover an ancient tome half-buried in the crystalline sand.', }, { kind: 'conditional', branches: [ { condition: 'metElderLi &gt;= 1', children: [ { kind: 'text', text: \"You remember Elder Li's warnings about cursed artifacts.\", }, ], }, ], }, { kind: 'choice', choices: [ { text: 'Open the tome carefully', condition: 'control &gt;= 50', children: [ { kind: 'text', text: 'Your careful approach pays off...' }, { kind: 'addItem', item: 'Ancient Wisdom Scroll', amount: 1 }, { kind: 'flag', flag: 'foundSecretTome', value: '1', global: true }, ], }, { text: 'Force the tome open', children: [ { kind: 'text', text: 'The tome crumbles at your rough touch...' }, { kind: 'flag', flag: 'destroyedTome', value: '1', global: true }, ], }, { text: 'Leave it undisturbed', children: [ { kind: 'text', text: 'Perhaps some secrets are meant to stay buried.', }, { kind: 'flag', flag: 'wisdomOfRestraint', value: '1', global: true, }, ], }, ], }, ], onCompleteFlags: [{ flag: 'exploredCrystalShore', value: 1 }], }; . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/events.html#practical-examples",
    
    "relUrl": "/events/events.html#practical-examples"
  },"148": {
    "doc": "Events",
    "title": "Advanced Techniques",
    "content": "State-Responsive Events . Create events that adapt to player progression: . const adaptiveGreeting: GameEvent = { location: 'Sect Grounds', steps: [ { kind: 'conditional', branches: [ { condition: 'realm &gt;= 5', children: [ { kind: 'text', text: 'Fellow disciples bow respectfully to your powerful aura.', }, ], }, { condition: 'realm &gt;= 2', children: [ { kind: 'text', text: 'Other disciples nod in acknowledgment of your progress.', }, ], }, { condition: '1', // Default case children: [ { kind: 'text', text: 'You feel overwhelmed by the spiritual energy here.', }, ], }, ], }, ], }; . Multi-Path Storylines . Use flags to create branching narratives: . const storyProgression: GameEvent = { location: 'Mountain Path', steps: [ { kind: 'conditional', branches: [ { condition: 'helpedVillagers == 1 &amp;&amp; foughtBandits == 0', children: [ { kind: 'text', text: 'The grateful villagers have left supplies for you.', }, { kind: 'addItem', item: 'Village Blessing Charm', amount: 1 }, ], }, { condition: 'foughtBandits == 1 &amp;&amp; helpedVillagers == 0', children: [ { kind: 'text', text: 'Wanted posters with your face are posted along the path.', }, { kind: 'flag', flag: 'reputation', value: 'reputation - 10' }, ], }, ], }, ], }; . Repeated Events . // First-time vs repeat visits { kind: 'conditional', branches: [ { condition: 'visitedLocation == 0', children: [ { kind: 'text', text: 'First visit content...' }, { kind: 'flag', flag: 'visitedLocation', value: '1', global: true } ] }, { condition: 'visitedLocation &gt;= 1', children: [ { kind: 'text', text: 'Return visit content...' } ] } ] } . Events are the storytelling heart of your mod. Master them, and you’ll create immersive, responsive experiences that make each player’s cultivation journey unique and memorable. Continue to: Event Steps to learn about the individual building blocks that make up events. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/events.html#advanced-techniques",
    
    "relUrl": "/events/events.html#advanced-techniques"
  },"149": {
    "doc": "Exit Step",
    "title": "Exit Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/exit.html",
    
    "relUrl": "/events/steps/exit.html"
  },"150": {
    "doc": "Exit Step",
    "title": "Introduction",
    "content": "The Exit Step immediately terminates the current event, useful for conditional early exits and branching logic. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/exit.html#introduction",
    
    "relUrl": "/events/steps/exit.html#introduction"
  },"151": {
    "doc": "Exit Step",
    "title": "Interface",
    "content": "interface ExitStep { kind: 'exit'; condition?: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/exit.html#interface",
    
    "relUrl": "/events/steps/exit.html#interface"
  },"152": {
    "doc": "Exit Step",
    "title": "Properties",
    "content": "kind - Always 'exit' . condition (optional) - Conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/exit.html#properties",
    
    "relUrl": "/events/steps/exit.html#properties"
  },"153": {
    "doc": "Exit Step",
    "title": "Example",
    "content": "{ kind: 'exit', condition: 'questCompleted == 1' } . // Early exit to avoid nested branching [ { kind: 'combat', enemies: [ratascar], victory: [], defeat: [ { kind: 'text', text: 'You flee, barely escaping with your life.', }, { kind: 'exit', }, ], }, { kind: 'text', text: 'You triumph over the beast.', }, //... Event continues for the victory branch ]; . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/exit.html#example",
    
    "relUrl": "/events/steps/exit.html#example"
  },"154": {
    "doc": "Fight Character Step",
    "title": "Fight Character Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/fightcharacter.html",
    
    "relUrl": "/events/steps/fightcharacter.html"
  },"155": {
    "doc": "Fight Character Step",
    "title": "Introduction",
    "content": "Initiates a combat encounter with a specific character with branching outcomes. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/fightcharacter.html#introduction",
    
    "relUrl": "/events/steps/fightcharacter.html#introduction"
  },"156": {
    "doc": "Fight Character Step",
    "title": "Interface",
    "content": "interface FightCharacterStep { kind: 'fightCharacter'; condition?: string; character: string; isSpar?: boolean; spawnCondition?: { hpMult: number; buffs: Buff[]; }; victory: EventStep[]; defeat: EventStep[]; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/fightcharacter.html#interface",
    
    "relUrl": "/events/steps/fightcharacter.html#interface"
  },"157": {
    "doc": "Fight Character Step",
    "title": "Properties",
    "content": ". | kind - Always 'fightCharacter' . | character - Character to fight . | isSpar (optional) - Whether this is a sparring match . | spawnCondition (optional) - HP multiplier and buffs for opponent . | victory - Steps to execute on victory . | defeat - Steps to execute on defeat . | condition (optional) - Conditional execution . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/fightcharacter.html#properties",
    
    "relUrl": "/events/steps/fightcharacter.html#properties"
  },"158": {
    "doc": "Fight Character Step",
    "title": "Examples",
    "content": "Basic Combat . { kind: 'fightCharacter', character: 'RivalCultivator', victory: [ { kind: 'text', text: 'You emerge victorious!' }, { kind: 'reputation', name: 'sect', amount: '5' } ], defeat: [ { kind: 'text', text: 'You suffer a humbling defeat.' }, ] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/fightcharacter.html#examples",
    
    "relUrl": "/events/steps/fightcharacter.html#examples"
  },"159": {
    "doc": "Flag Step",
    "title": "Flag Step",
    "content": "Sets or modifies flag values to track player choices, progression, and game state. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/flag.html",
    
    "relUrl": "/events/steps/flag.html"
  },"160": {
    "doc": "Flag Step",
    "title": "Interface",
    "content": "interface SetFlagStep { kind: 'flag'; condition?: string; global: boolean; flag: string; value: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/flag.html#interface",
    
    "relUrl": "/events/steps/flag.html#interface"
  },"161": {
    "doc": "Flag Step",
    "title": "Properties",
    "content": "kind - Always 'flag' . global - Persistence scope. If true, stored permanently in save game; if false, only exists during current event. flag - Unique string identifier for the flag. Recommend prefixing with mod name to avoid conflicts. value - String expression that evaluates to a number. Can be literal numbers, mathematical expressions, or references to other flags. condition (optional) - Flag expression that must evaluate to true for the step to execute. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/flag.html#properties",
    
    "relUrl": "/events/steps/flag.html#properties"
  },"162": {
    "doc": "Flag Step",
    "title": "Examples",
    "content": "Simple Flag Setting . { kind: 'flag', global: true, flag: 'met_elder_chen', value: '1' } . Mathematical Expression . { kind: 'flag', global: true, flag: 'total_quest_points', value: 'total_quest_points + 10' } . Event-Scoped Flag . { kind: 'flag', global: false, flag: 'explored_western_path', value: '1' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/flag.html#examples",
    
    "relUrl": "/events/steps/flag.html#examples"
  },"163": {
    "doc": "Flag Step",
    "title": "Flag Naming Best Practices",
    "content": "Use descriptive names with consistent prefixes: . | mymod_quest_bandit_leader_defeated | mymod_character_elder_li_approval | mymod_location_secret_chamber_discovered | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/flag.html#flag-naming-best-practices",
    
    "relUrl": "/events/steps/flag.html#flag-naming-best-practices"
  },"164": {
    "doc": "Flags System",
    "title": "Flags System",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/flags.html",
    
    "relUrl": "/concepts/flags.html"
  },"165": {
    "doc": "Flags System",
    "title": "Introduction",
    "content": "Flags are the backbone of state management in Ascend from Nine Mountains. They serve as the game’s memory system, allowing you to track player choices, quest progress, character interactions, and any other persistent or temporary data your mod needs to remember. Think of flags as a simple database where you can store numbers and retrieve them later to make decisions about how events unfold. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/flags.html#introduction",
    
    "relUrl": "/concepts/flags.html#introduction"
  },"166": {
    "doc": "Flags System",
    "title": "Core Concepts",
    "content": "What Are Flags? . Flags are key-value pairs consisting of: . | Key: A unique string identifier (e.g., \"playerMetElder\") | Value: A numeric value that can represent booleans, counters, or complex data | . Flag Types . Global Flags . | Persist across the entire game session | Saved permanently with the game state | Use for: player progress, unlocked content, important choices | . Event Flags . | Temporary storage during event sequences | Automatically cleared when the event ends | Use for: dialogue branches, temporary calculations, step-by-step logic | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/flags.html#core-concepts",
    
    "relUrl": "/concepts/flags.html#core-concepts"
  },"167": {
    "doc": "Flags System",
    "title": "Deep Dive: Flag Mechanics",
    "content": "Setting Flag Values . When you set a flag, the value field is evaluated as a mathematical expression, and the resulting number is stored: . { kind: 'flag', flag: 'questProgress', value: 'questProgress + 1', // Evaluates current value + 1 global: true } . Expression Examples: . value: '1'; // Stores: 1 value: 'month'; // Stores: current month (e.g., 15) value: 'existingFlag + 1'; // Stores: previous value + 1 value: 'power * 2'; // Stores: player's power × 2 . Reading Flags in Conditions . Use flags in condition strings to control event flow: . // Simple boolean check condition: 'playerMetBoss == 1'; // Numeric comparison condition: 'questProgress &gt;= 5'; // Complex logic with multiple flags condition: 'playerLevel &gt;= 10 &amp;&amp; hasWeapon == 1'; // Mathematical operations condition: 'totalScore &gt;= requiredScore * 2'; . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/flags.html#deep-dive-flag-mechanics",
    
    "relUrl": "/concepts/flags.html#deep-dive-flag-mechanics"
  },"168": {
    "doc": "Flags System",
    "title": "Practical Examples",
    "content": "Tracking First Meetings . { kind: 'conditional', branches: [ { condition: 'metElderLi == 0', children: [ { kind: 'text', text: 'You encounter Elder Li for the first time.' }, { kind: 'flag', flag: 'metElderLi', value: '1', global: true } ] }, { condition: 'metElderLi &gt;= 1', children: [ { kind: 'text', text: 'Elder Li greets you warmly.' } ] } ] } . Progressive Counters . // Increment helper counter { kind: 'flag', flag: 'helpedPeople', value: 'helpedPeople + 1', global: true } // Check reputation threshold { kind: 'conditional', branches: [ { condition: 'helpedPeople &gt;= 5', children: [ { kind: 'text', text: 'Your reputation for kindness precedes you.' } ] } ] } . Time-Based Logic . // Remember when something happened { kind: 'flag', flag: 'festivalMonth', value: 'month', global: true } // Check elapsed time { kind: 'conditional', branches: [ { condition: 'month - festivalMonth &gt;= 6', children: [ { kind: 'text', text: 'Half a year has passed since the festival.' } ] } ] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/flags.html#practical-examples",
    
    "relUrl": "/concepts/flags.html#practical-examples"
  },"169": {
    "doc": "Flags System",
    "title": "Built-in Game Flags",
    "content": "The game automatically provides numerous flags representing the current game state: . Player Stats . | power, defense, barrier, control, intensity - Combat and crafting stats | qi, maxqi, qiDroplets - Qi management | realm, realmProgress - Cultivation level | money, spiritstones, favour - Resources | . Time and Calendar . | year, yearMonth, day - Current game time | . Inventory and Equipment . | Item names as flags (with proper conversion) | storage_ + item flag - Storage quantities | equipped_ + item flag - Equipment status | . Character State . | age, lifespan, injured - Character condition | Affinity levels: fist, weapon, blossom, celestial, cloud, blood | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/flags.html#built-in-game-flags",
    
    "relUrl": "/concepts/flags.html#built-in-game-flags"
  },"170": {
    "doc": "Flags System",
    "title": "Advanced Techniques",
    "content": "Flag Helper Function . For items with complex names, use the flag() helper to convert names to valid flag keys: . const flag = window.modAPI.utils.flag; // Convert item names properly flag('Greater Spirit Grass'); // becomes: 'Greater_Spirit_Grass' flag('Corrupt Void Key (III)'); // becomes: 'Corrupt_Void_Key__III_' // Use in conditions condition: `${flag(itemName)} &gt;= 5`; condition: `storage_${flag(itemName)} &gt; 0`; . Organized Flag Management . // Define flag constants for maintainability export const modFlags = { playerMetMaster: 'myMod_playerMetMaster', questProgress: 'myMod_questProgress', specialChoice: 'myMod_specialChoice', }; // Use in events { kind: 'flag', flag: modFlags.playerMetMaster, value: '1', global: true } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/flags.html#advanced-techniques",
    
    "relUrl": "/concepts/flags.html#advanced-techniques"
  },"171": {
    "doc": "Flags System",
    "title": "Tips and Best Practices",
    "content": "Naming Conventions . | Prefix your flags: Use myMod_flagName to avoid conflicts | Use descriptive names: completedIntroQuest not flag1 | Be consistent: Establish patterns and stick to them | . Storage Strategy . | Global flags for persistent data: player choices, progress, unlocks | Event flags for temporary state: dialogue options, calculations | Document your flags: Keep track of meanings and possible values | . Common Patterns . // Boolean flags (0 = false, 1 = true) condition: 'hasKeyItem == 1'; // Threshold checks for progression condition: 'questStage &gt;= 3'; // Time-based unlock conditions condition: 'month &gt;= 6 &amp;&amp; completedPreQuest == 1'; // Resource requirement checks condition: 'money &gt;= 1000 &amp;&amp; power &gt;= 50'; . The flags system is incredibly flexible and powerful. Master it, and you’ll be able to create dynamic, responsive content that adapts to each player’s unique journey through your mod. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/flags.html#tips-and-best-practices",
    
    "relUrl": "/concepts/flags.html#tips-and-best-practices"
  },"172": {
    "doc": "Getting Started",
    "title": "Getting Started",
    "content": "This guide will help you get started with creating mods for Ascend from Nine Mountains. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/getting-started.html",
    
    "relUrl": "/getting-started.html"
  },"173": {
    "doc": "Getting Started",
    "title": "Prerequisites",
    "content": "Before you begin modding, you’ll need: . | The game installed and working | A text editor (VS Code recommended) | Basic understanding of JSON files | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/getting-started.html#prerequisites",
    
    "relUrl": "/getting-started.html#prerequisites"
  },"174": {
    "doc": "Getting Started",
    "title": "Creating Your First Mod",
    "content": ". | Navigate to the game’s mod directory | Create a new folder for your mod | Add a mod.json file with basic information | Start adding your custom content | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/getting-started.html#creating-your-first-mod",
    
    "relUrl": "/getting-started.html#creating-your-first-mod"
  },"175": {
    "doc": "Getting Started",
    "title": "Next Steps",
    "content": "Once you have the basics down, explore these topics: . | Core Concepts - Understanding game systems | Examples - Practical examples to learn from | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/getting-started.html#next-steps",
    
    "relUrl": "/getting-started.html#next-steps"
  },"176": {
    "doc": "Give Item Step",
    "title": "Give Item Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/giveitem.html",
    
    "relUrl": "/events/steps/giveitem.html"
  },"177": {
    "doc": "Give Item Step",
    "title": "Introduction",
    "content": "The Give Item Step creates interactive inventory selection scenarios where players must choose items from their inventory to progress through event branches. This enables crafting systems, trading mechanics, and sacrifice scenarios. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/giveitem.html#introduction",
    
    "relUrl": "/events/steps/giveitem.html#introduction"
  },"178": {
    "doc": "Give Item Step",
    "title": "Interface",
    "content": "interface GiveItemStep { kind: 'giveItem'; condition?: string; description: string; itemNames: string[]; branches: { item: string; children: EventStep[]; }[]; cancel: EventStep[]; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/giveitem.html#interface",
    
    "relUrl": "/events/steps/giveitem.html#interface"
  },"179": {
    "doc": "Give Item Step",
    "title": "Properties",
    "content": "kind - Always 'giveItem' . description - Instruction text . | String displayed to the player explaining what item selection is for | Appears at the top of the item picker dialog | . itemNames - Valid item filter . | Array of item names that the player can select from | Only items matching these names will be selectable in the inventory picker | . branches - Item-specific outcomes . | Array of branches defining what happens when specific items are selected | Each branch contains an item name and the event steps to execute | . cancel - Cancellation outcome . | Array of event steps executed when player cancels selection | . condition (optional) - Conditional execution . | Flag expression that must be true for the step to execute | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/giveitem.html#properties",
    
    "relUrl": "/events/steps/giveitem.html#properties"
  },"180": {
    "doc": "Give Item Step",
    "title": "Examples",
    "content": "Basic Material Selection . { kind: 'giveItem', description: 'Select a material to forge into your weapon', itemNames: ['Iron Ingot', 'Steel Ingot', 'Mithril Ingot'], branches: [ { item: 'Iron Ingot', children: [ { kind: 'text', text: 'You hand over the iron ingot. The blacksmith nods approvingly.' }, { kind: 'removeItem', item: { name: 'Iron Ingot' }, amount: '1' }, { kind: 'addItem', item: { name: 'Iron Sword' }, amount: '1' } ] } ], cancel: [ { kind: 'text', text: 'You decide to keep your materials for now.' }, { kind: 'exit' } ] } . Puppet Crystal Selection . { kind: 'giveItem', description: 'Select a technique crystal to be inserted into the puppet\\'s core', itemNames: [ 'Blood Crystal IV', 'Blossom Crystal IV', 'Cloud Crystal IV', 'Celestial Crystal IV' ], branches: [ { item: 'Blood Crystal IV', children: [ { kind: 'text', text: 'You insert the blood crystal into the core of the puppet, and step back.' }, { kind: 'removeItem', item: { name: 'Blood Crystal IV' }, amount: '1' }, { kind: 'addItem', item: { name: 'Attuned Blood Puppet' }, amount: '1' } ] } ], cancel: [ { kind: 'text', text: 'You decide to step back and leave the puppet for now.' }, { kind: 'exit' } ] } . Trading Sequence . [ { kind: 'speech', character: 'Mysterious Merchant', text: 'I seek rare cultivation materials. What might you have to trade?' }, { kind: 'giveItem', description: 'Select an item to trade with the mysterious merchant', itemNames: ['Spirit Root', 'Moonstone', 'Ancient Scroll', 'Beast Core'], branches: [ { item: 'Spirit Root', children: [ { kind: 'speech', character: 'Mysterious Merchant', text: 'Ah, an excellent spirit root! This will serve my purposes perfectly.' }, { kind: 'removeItem', item: { name: 'Spirit Root' }, amount: '1' }, { kind: 'addItem', item: { name: 'Rare Technique Manual' }, amount: '1' } ] } ], cancel: [ { kind: 'speech', character: 'Mysterious Merchant', text: 'Perhaps another time, then. Safe travels, cultivator.' } ] } ] . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/giveitem.html#examples",
    
    "relUrl": "/events/steps/giveitem.html#examples"
  },"181": {
    "doc": "Goto Label Step",
    "title": "Goto Label Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/gotolabel.html",
    
    "relUrl": "/events/steps/gotolabel.html"
  },"182": {
    "doc": "Goto Label Step",
    "title": "Introduction",
    "content": "The Goto Label Step jumps to a previously defined label in the event, enabling loops and non-linear event flow. See Label Step for details on setting a label. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/gotolabel.html#introduction",
    
    "relUrl": "/events/steps/gotolabel.html#introduction"
  },"183": {
    "doc": "Goto Label Step",
    "title": "Interface",
    "content": "interface GotoLabelStep { kind: 'gotoLabel'; condition?: string; label: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/gotolabel.html#interface",
    
    "relUrl": "/events/steps/gotolabel.html#interface"
  },"184": {
    "doc": "Goto Label Step",
    "title": "Properties",
    "content": "kind - Always 'gotoLabel' . label - Target label name . condition (optional) - Conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/gotolabel.html#properties",
    
    "relUrl": "/events/steps/gotolabel.html#properties"
  },"185": {
    "doc": "Goto Label Step",
    "title": "Example",
    "content": "{ kind: 'gotoLabel', label: 'retry_point', condition: 'attempts &lt; 3' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/gotolabel.html#example",
    
    "relUrl": "/events/steps/gotolabel.html#example"
  },"186": {
    "doc": "Event Step Types",
    "title": "Event Step Types",
    "content": "Comprehensive documentation for every type of event step available in AFNM. Each step type is designed for specific functionality, from basic text display to complex game state modifications. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/",
    
    "relUrl": "/events/steps/"
  },"187": {
    "doc": "Event Step Types",
    "title": "Step Categories",
    "content": "Basic Interaction . | Text Step - Display narrative text and descriptions | Speech Step - Character dialogue and conversations | Choice Step - Player decision points and branching | . State Management . | Flag Step - Set and modify flag values | Conditional Step - Execute steps based on conditions | . Inventory &amp; Resources . | Add Item Step - Give items to player | Remove Item Step - Remove items from player | Replace Item Step - Transform one item into another | Money Step - Modify spirit stones | Qi Step - Adjust qi reserves | Drop Item Step - Random item selection from pools | . Character Interactions . | Approval Step - Modify character approval ratings | Progress Relationship Step - Advance relationship tiers | Team Up Step - Create temporary combat partnerships | Clear Team Up Step - Remove all team-up partners | Add Follower Step - Add persistent follower companions | Dual Cultivation Step - Intimate cultivation sessions | Talk To Character Step - Open dialogue interface | Trade With Character Step - Open trading interface | Craft With Character Step - Collaborative crafting | Fight Character Step - Initiate combat encounters | Set Character Step - Place NPCs at specific locations | Clear Character Step - Remove NPCs from locations | Mark Beat Character Step - Mark character as defeated | Mark Did Encounter Step - Track first character meetings | Update Character Definition Step - Evolve character behaviors | . World &amp; Navigation . | Change Location Step - Move player between locations | Unlock Location Step - Make new areas accessible | Unlock Altar Step - Unlock special altar locations | Change Screen Step - Navigate to different game interfaces | Pass Time Step - Advance the game calendar | Exit Step - Terminate current event immediately | Label Step - Create jump points for navigation | Goto Label Step - Jump to labeled points in events | . Combat &amp; Challenges . | Combat Step - Battle encounters with enemies | Crafting Step - Crafting challenges and mini-games | Tournament Step - Competitive tournament brackets | Stone Cutting Step - Jade stone gambling mini-games | . Progression &amp; Systems . | Create Buff Step - Apply temporary effects to player | Consume Buff Step - Remove or reduce buff duration | Add Quest Step - Start new questlines | Change Favour Step - Modify favour points | Add Destiny Step - Modify destiny points | Change Reputation Step - Affect faction standings | Change Hp Step - Modify player health | Unlock Technique Step - Grant combat techniques | Unlock Crafting Technique Step - Grant crafting techniques | Add Recipe Step - Grant crafting recipes | Give Item Step - Interactive item selection from inventory | Craft Skill Step - Increase crafting skill points | . Guild Systems . | Add Guild Approval Step - Increase guild standing | Advance Guild Rank Step - Promote player in guild | . Audio &amp; Atmosphere . | Change BGM Step - Change background music | Clear Change BGM Step - Restore location music | . Advanced Systems . | Mark Calendar Event Complete Step - Track monthly events | Override Player Realm Step - Temporarily change perceived realm | Set Aid Breakthrough Cooldown Step - Manage character aid timers | . Each step type has its own dedicated page with detailed explanations, parameters, examples, and best practices for effective usage in your events. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/#step-categories",
    
    "relUrl": "/events/steps/#step-categories"
  },"188": {
    "doc": "Core Concepts",
    "title": "Core Concepts",
    "content": "Understanding these fundamental systems is essential for creating effective AFNM mods. These concepts form the foundation of the game’s data-driven architecture. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/",
    
    "relUrl": "/concepts/"
  },"189": {
    "doc": "Core Concepts",
    "title": "Essential Systems",
    "content": ". | Flags System - State management and player progress tracking | Scaling System - Dynamic value calculations and balance | . These systems power most of the game’s mechanics, from simple item effects to complex quest chains and character progression. Master these concepts, and you’ll be able to create sophisticated, balanced content that integrates seamlessly with the base game. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/#essential-systems",
    
    "relUrl": "/concepts/#essential-systems"
  },"190": {
    "doc": "Guides",
    "title": "Modding Guides",
    "content": "Comprehensive step-by-step guides to take you from initial setup through publishing your completed mod. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/#modding-guides",
    
    "relUrl": "/guides/#modding-guides"
  },"191": {
    "doc": "Guides",
    "title": "Getting Started",
    "content": ". | Project Setup - Environment setup and project configuration | Mod Development - Building content with the ModAPI | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/#getting-started",
    
    "relUrl": "/guides/#getting-started"
  },"192": {
    "doc": "Guides",
    "title": "Advanced Topics",
    "content": ". | Packaging &amp; Testing - Building and testing your mod | Publishing - Releasing to Steam Workshop | . These guides provide detailed, practical instructions for every aspect of AFNM mod creation. Start with Project Setup if you’re new to modding, or jump to any section that matches your current needs. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/#advanced-topics",
    
    "relUrl": "/guides/#advanced-topics"
  },"193": {
    "doc": "Guides",
    "title": "Guides",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/",
    
    "relUrl": "/guides/"
  },"194": {
    "doc": "Events System",
    "title": "Events System",
    "content": "The events system is the heart of interactive content in Ascend from Nine Mountains. Whether you’re creating dialogue with NPCs, managing complex storylines, or building dynamic encounters, events provide the foundation for all interactive experiences. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/",
    
    "relUrl": "/events/"
  },"195": {
    "doc": "Events System",
    "title": "Core Components",
    "content": ". | Events - The main event system and structure | Event Steps - Individual actions that make up events | Event Step Types - Complete reference for all step types | Triggered Events - Automatic event triggering system | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/#core-components",
    
    "relUrl": "/events/#core-components"
  },"196": {
    "doc": "Events System",
    "title": "What You Can Create",
    "content": "Events enable you to build rich, interactive content including: . | Character conversations and dialogue trees | Complex storylines with branching narratives | Quest systems and progression tracking | Item interactions and world changes | Combat encounters and crafting challenges | Location-based events and discoveries | . The system is designed to be both powerful and approachable, allowing you to create everything from simple item interactions to complex, multi-branched storylines that respond to player choices and game state. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/#what-you-can-create",
    
    "relUrl": "/events/#what-you-can-create"
  },"197": {
    "doc": "Home",
    "title": "AFNM Modding Documentation",
    "content": "Welcome to the documentation for modding Ascend from Nine Mountains. This site provides comprehensive guides and references for modding the game. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/#afnm-modding-documentation",
    
    "relUrl": "/#afnm-modding-documentation"
  },"198": {
    "doc": "Home",
    "title": "Quick Start",
    "content": ". | Getting Started - Learn the basics of modding AFNM | Guides - Step-by-step modding tutorials | Core Concepts - Understanding game systems | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/#quick-start",
    
    "relUrl": "/#quick-start"
  },"199": {
    "doc": "Home",
    "title": "What You’ll Find Here",
    "content": "This documentation covers everything you need to know about creating mods for Ascend from Nine Mountains, including: . | Setting up your modding environment | Understanding game mechanics and data structures | Creating custom content like items, characters, and events | Advanced modding techniques and best practices | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/#what-youll-find-here",
    
    "relUrl": "/#what-youll-find-here"
  },"200": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/",
    
    "relUrl": "/"
  },"201": {
    "doc": "Label Step",
    "title": "Label Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/label.html",
    
    "relUrl": "/events/steps/label.html"
  },"202": {
    "doc": "Label Step",
    "title": "Introduction",
    "content": "The Label Step creates named jump points in events that can be targeted by Goto Label Step for non-linear flow. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/label.html#introduction",
    
    "relUrl": "/events/steps/label.html#introduction"
  },"203": {
    "doc": "Label Step",
    "title": "Interface",
    "content": "interface LabelStep { kind: 'label'; condition?: string; label: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/label.html#interface",
    
    "relUrl": "/events/steps/label.html#interface"
  },"204": {
    "doc": "Label Step",
    "title": "Properties",
    "content": "kind - Always 'label' . label - Unique label name . condition (optional) - Conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/label.html#properties",
    
    "relUrl": "/events/steps/label.html#properties"
  },"205": {
    "doc": "Label Step",
    "title": "Example",
    "content": "{ kind: 'label', label: 'retry_point' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/label.html#example",
    
    "relUrl": "/events/steps/label.html#example"
  },"206": {
    "doc": "Mark Beat Character Step",
    "title": "Mark Beat Character Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markbeatcharacter.html",
    
    "relUrl": "/events/steps/markbeatcharacter.html"
  },"207": {
    "doc": "Mark Beat Character Step",
    "title": "Introduction",
    "content": "Marks a character as defeated in combat, tracking player victories. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markbeatcharacter.html#introduction",
    
    "relUrl": "/events/steps/markbeatcharacter.html#introduction"
  },"208": {
    "doc": "Mark Beat Character Step",
    "title": "Interface",
    "content": "interface MarkBeatCharacterStep { kind: 'markBeatCharacter'; condition?: string; character: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markbeatcharacter.html#interface",
    
    "relUrl": "/events/steps/markbeatcharacter.html#interface"
  },"209": {
    "doc": "Mark Beat Character Step",
    "title": "Properties",
    "content": "kind - Always 'markBeatCharacter' . character - Character to mark as defeated . condition (optional) - Conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markbeatcharacter.html#properties",
    
    "relUrl": "/events/steps/markbeatcharacter.html#properties"
  },"210": {
    "doc": "Mark Beat Character Step",
    "title": "Examples",
    "content": "Basic Usage . { kind: 'markBeatCharacter', character: 'Rival Cultivator' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markbeatcharacter.html#examples",
    
    "relUrl": "/events/steps/markbeatcharacter.html#examples"
  },"211": {
    "doc": "Mark Calendar Event Complete Step",
    "title": "Mark Calendar Event Complete Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markcalendareventcomplete.html",
    
    "relUrl": "/events/steps/markcalendareventcomplete.html"
  },"212": {
    "doc": "Mark Calendar Event Complete Step",
    "title": "Introduction",
    "content": "The Mark Calendar Event Complete Step marks calendar events as completed for the current month, preventing them from being triggered again during that time period. This is essential for calendar-based events like auctions and festivals. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markcalendareventcomplete.html#introduction",
    
    "relUrl": "/events/steps/markcalendareventcomplete.html#introduction"
  },"213": {
    "doc": "Mark Calendar Event Complete Step",
    "title": "Interface",
    "content": "interface MarkCalendarEventCompleteStep { kind: 'markCalendarEventComplete'; condition?: string; event: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markcalendareventcomplete.html#interface",
    
    "relUrl": "/events/steps/markcalendareventcomplete.html#interface"
  },"214": {
    "doc": "Mark Calendar Event Complete Step",
    "title": "Properties",
    "content": "kind - Always 'markCalendarEventComplete' . event - Calendar event identifier . | String that uniquely identifies the calendar event to mark as complete | Must match the format: {CalendarEvent.name}_{CalendarEvent.location} | Case-sensitive and must exactly match the calendar event definition | . condition (optional) - Conditional execution . | Flag expression that must be true for the event to be marked complete | Step is skipped if condition fails | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markcalendareventcomplete.html#properties",
    
    "relUrl": "/events/steps/markcalendareventcomplete.html#properties"
  },"215": {
    "doc": "Mark Calendar Event Complete Step",
    "title": "Examples",
    "content": "Simple Event Completion . { kind: 'markCalendarEventComplete', event: 'Chenmai Auction_Shen Henda City' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markcalendareventcomplete.html#examples",
    
    "relUrl": "/events/steps/markcalendareventcomplete.html#examples"
  },"216": {
    "doc": "Mark Did Encounter Step",
    "title": "Mark Did Encounter Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markdidencounter.html",
    
    "relUrl": "/events/steps/markdidencounter.html"
  },"217": {
    "doc": "Mark Did Encounter Step",
    "title": "Introduction",
    "content": "Marks a character as having been encountered by the player this month, preventing duplicate encounter events. Usually used alongside the ‘harassment’ character interactions. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markdidencounter.html#introduction",
    
    "relUrl": "/events/steps/markdidencounter.html#introduction"
  },"218": {
    "doc": "Mark Did Encounter Step",
    "title": "Interface",
    "content": "interface MarkDidEncounterStep { kind: 'markDidEncounter'; condition?: string; character: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markdidencounter.html#interface",
    
    "relUrl": "/events/steps/markdidencounter.html#interface"
  },"219": {
    "doc": "Mark Did Encounter Step",
    "title": "Properties",
    "content": "kind - Always 'markDidEncounter' . character - Character to mark as encountered . condition (optional) - Conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markdidencounter.html#properties",
    
    "relUrl": "/events/steps/markdidencounter.html#properties"
  },"220": {
    "doc": "Mark Did Encounter Step",
    "title": "Examples",
    "content": "Basic Usage . { kind: 'markDidEncounter', character: 'Shiao Gian' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/markdidencounter.html#examples",
    
    "relUrl": "/events/steps/markdidencounter.html#examples"
  },"221": {
    "doc": "Mod Development",
    "title": "Mod Development",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/mod-development.html",
    
    "relUrl": "/guides/mod-development.html"
  },"222": {
    "doc": "Mod Development",
    "title": "Introduction",
    "content": "Now that your environment is set up, it’s time to start building actual content for your mod! This guide covers the ModAPI, its three main components, and how to create your first items, characters, and events. The root entry point of your mod is src/modContent/index.ts. You can split your mod over multiple files, but all must be imported into this root one for the content to be loaded. At the window level you have access to the ModAPI. This is a set of helpers to allow you to more easily integrate your mod content into the game. It can be accessed from any file in your mod under the window.modAPI path. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/mod-development.html#introduction",
    
    "relUrl": "/guides/mod-development.html#introduction"
  },"223": {
    "doc": "Mod Development",
    "title": "Understanding the ModAPI",
    "content": "The ModAPI is your gateway to the game’s systems. It’s structured into three main sections: . 1. gameData - The Game’s Current State . window.modAPI.gameData; . This contains all existing game content in maps of name → object: . | items - All current items in the game | characters - NPCs and their data | locations - All game locations | techniques - Combat and cultivation techniques | quests - Available quests | And much more… | . Important: Though you ‘can’ modify these object directly (such as to edit existing content) it is not recommended.! Use the actions functions instead to have better integration into the game itself. 2. actions - Adding Your Content . window.modAPI.actions; . These functions register your new content into the game: . Core Content: . | addItem(item) - Add new items | addCharacter(character) - Add NPCs | addLocation(location) - Add new areas | addTechnique(technique) - Add cultivation techniques | addQuest(quest) - Add questlines | . Integration Functions: . | addItemToShop(item, stacks, location, ...) - Make items purchasable | addItemToAuction(item, chance, condition, ...) - Add to auctions | linkLocations(existing, link) - Connect areas | addCalendarEvent(event) - Add seasonal events | . Rule: Always add something before using it elsewhere. For example, call both addItem() and addItemToShop() to create a purchasable item. 3. utils - Helper Functions . window.modAPI.utils; . Utility functions to make content creation easier: . Enemy Scaling: . | alpha(enemy) - Create alpha variant (+50% stats) | realmbreaker(enemy) - Create multiple realm variants | corrupted(enemy) - Add corruption effects | . Quest Creation: . | createCullingMission(...) - Kill X enemies quest | createDeliveryMission(...) - Fetch/deliver quest | createHuntQuest(...) - Hunt specific enemy | . Balance Helpers: . | getExpectedPower(realm, progress) - Recommended stats by realm | getExpectedHealth(realm, progress) - HP scaling guidelines | getNumericReward(base, realm, progress) - Scale rewards properly | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/mod-development.html#understanding-the-modapi",
    
    "relUrl": "/guides/mod-development.html#understanding-the-modapi"
  },"224": {
    "doc": "Mod Development",
    "title": "Your First Content",
    "content": "Creating Your First Item . Let’s create a simple consumable item: . // src/modContent/index.ts import icon from '../assets/mystic-tea.png'; // Create the item const mysticTea = { name: 'Mystic Tea', description: 'A soothing blend that calms the spirit and restores qi.', icon, rarity: 'Common', itemKind: 'Consumable', value: 100, effects: [ { kind: 'restoreQi', amount: { value: 50 }, }, { kind: 'buffSelf', buff: 'calmMind', // Reference to a buff you'll create duration: 3, }, ], }; // Register it with the game window.modAPI.actions.addItem(mysticTea); // Make it available in shops window.modAPI.actions.addItemToShop( mysticTea, 5, // 5 in stock 'Liang Tiao Village', // Location 'bodyForging', // Required realm ); . Working with Assets . When you reference images or other assets: . | Place the file in src/assets/ folder | Import it at the top of your file | Use the import in your content | . import mysticTeaIcon from '../assets/items/mystic-tea.png'; import elderPortrait from '../assets/characters/elder-chen.png'; import locationBackground from '../assets/locations/tea-garden.jpg'; // Then use in your content: const item = { name: 'Mystic Tea', icon: mysticTeaIcon, // Use the import // ... rest of item definition }; . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/mod-development.html#your-first-content",
    
    "relUrl": "/guides/mod-development.html#your-first-content"
  },"225": {
    "doc": "Mod Development",
    "title": "Advanced Patterns",
    "content": "Content Organization . As your mod grows, organize your content into logical modules: . // src/modContent/index.ts import { initializeItems } from './items'; import { initializeCharacters } from './characters'; import { initializeLocations } from './locations'; import { initializeQuests } from './quests'; // Initialize all content modules initializeItems(); initializeCharacters(); initializeLocations(); initializeQuests(); . // src/modContent/items.ts export function initializeItems() { // Create tea-related items const mysticTea = { /* ... */ }; const dragonWellTea = { /* ... */ }; window.modAPI.actions.addItem(mysticTea); window.modAPI.actions.addItem(dragonWellTea); // Add to shops window.modAPI.actions.addItemToShop( mysticTea, 10, 'townMarket', 'bodyForging', ); } . Scaling and Balance . Use the utility functions to create properly balanced content: . // Create realm-appropriate rewards const rewardAmount = window.modAPI.utils.getNumericReward( 100, 'coreFormation', 'middle', ); . You now have the foundation to create rich, integrated content for AFNM! Continue to learn about packaging and testing your creations. Next: Packaging &amp; Testing . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/mod-development.html#advanced-patterns",
    
    "relUrl": "/guides/mod-development.html#advanced-patterns"
  },"226": {
    "doc": "ModAPI Reference",
    "title": "ModAPI Reference",
    "content": "The ModAPI provides access to game data, content registration functions, and utility helpers for mod development. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/modapi.html",
    
    "relUrl": "/concepts/modapi.html"
  },"227": {
    "doc": "ModAPI Reference",
    "title": "Structure",
    "content": "The ModAPI is available globally as window.modAPI with three main sections: . interface ModAPI { gameData: { /* Access to all game content */ }; actions: { /* Functions to add new content */ }; utils: { /* Helper functions for mod development */ }; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/modapi.html#structure",
    
    "relUrl": "/concepts/modapi.html#structure"
  },"228": {
    "doc": "ModAPI Reference",
    "title": "Game Data Access",
    "content": "Access existing game content through window.modAPI.gameData: . Core Collections . | items - Record&lt;string, Item&gt; - All items in the game | characters - Record&lt;string, Character&gt; - All NPCs and characters | techniques - Record&lt;string, Technique&gt; - All cultivation techniques | locations - Record&lt;string, GameLocation&gt; - All game locations | quests - Record&lt;string, Quest&gt; - All available quests | manuals - Record&lt;string, Manual&gt; - All technique manuals | . Realm-Based Collections . | auction - Record&lt;Realm, AuctionItemDef[]&gt; - Auction items by realm | breakthroughs - Record&lt;Realm, Breakthrough[]&gt; - Breakthrough requirements | crops - Record&lt;Realm, Crop[]&gt; - Crops available by realm | mineChambers - Record&lt;Realm, Record&lt;RealmProgress, MineChamber[]&gt;&gt; - Mine chambers by realm and progress | uncutStones - Record&lt;Realm, UncutStonePool | undefined&gt; - Uncut stone pools by realm | . Specialized Collections . | backgrounds - Character backgrounds by life stage: . | birth: Background[] | child: Background[] | teen: Background[] | . | craftingTechniques - Record&lt;string, CraftingTechnique&gt; - All crafting techniques | techniqueBuffs - School-specific technique buffs: . | blood, blossom, celestial, cloud, fist, weapon | . | guilds - Record&lt;string, Guild&gt; - All guilds | enchantments - Enchantment[] - All equipment enchantments | fallenStars - FallenStar[] - All fallen star events | rooms - Room[] - All house rooms | mysticalRegionBlessings - Blessing[] - All mystical region blessings | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/modapi.html#game-data-access",
    
    "relUrl": "/concepts/modapi.html#game-data-access"
  },"229": {
    "doc": "ModAPI Reference",
    "title": "Content Registration",
    "content": "Add new content through window.modAPI.actions: . Items and Equipment . window.modAPI.actions.addItem(item: Item) window.modAPI.actions.addItemToShop(item, stacks, location, realm, valueModifier?, reputation?) window.modAPI.actions.addItemToAuction(item, chance, condition, countOverride?, countMultiplier?) . Characters and Backgrounds . window.modAPI.actions.addCharacter(character: Character) window.modAPI.actions.addBirthBackground(background: Background) window.modAPI.actions.addChildBackground(background: Background) window.modAPI.actions.addTeenBackground(background: Background) . Cultivation Content . window.modAPI.actions.addBreakthrough(realm: Realm, breakthrough: Breakthrough) window.modAPI.actions.addTechnique(technique: Technique) window.modAPI.actions.addManual(manual: Manual) window.modAPI.actions.addCraftingTechnique(technique: CraftingTechnique) window.modAPI.actions.addDestiny(destiny: Destiny) . World Content . window.modAPI.actions.addLocation(location: GameLocation) window.modAPI.actions.linkLocations(existing: string, link: ConditionalLink | ExplorationLink) window.modAPI.actions.addQuest(quest: Quest) window.modAPI.actions.addCalendarEvent(event: CalendarEvent) window.modAPI.actions.addTriggeredEvent(event: TriggeredEvent) . Specialized Content . window.modAPI.actions.addCrop(realm: Realm, crop: Crop) window.modAPI.actions.addMineChamber(realm: Realm, progress: RealmProgress, chamber: MineChamber) window.modAPI.actions.addGuild(guild: Guild) window.modAPI.actions.addDualCultivationTechnique(technique: IntimateTechnique) window.modAPI.actions.addEnchantment(enchantment: Enchantment) window.modAPI.actions.addFallenStar(fallenStar: FallenStar) window.modAPI.actions.addRoom(room: Room) . Crafting System . window.modAPI.actions.addRecipeToLibrary(item: RecipeItem) window.modAPI.actions.addRecipeToResearch(baseItem: Item, recipe: RecipeItem) window.modAPI.actions.addResearchableRecipe(baseItem: string, recipe: RecipeItem) window.modAPI.actions.addUncutStone(realm: Realm, uncutStone: Item) . Audio . window.modAPI.actions.addMusic(name: string, path: string[]) window.modAPI.actions.addSfx(name: string, path: string) . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/modapi.html#content-registration",
    
    "relUrl": "/concepts/modapi.html#content-registration"
  },"230": {
    "doc": "ModAPI Reference",
    "title": "Utility Functions",
    "content": "Helper functions through window.modAPI.utils: . Enemy Modifiers . window.modAPI.utils.alpha(enemy: EnemyEntity) // Elite version window.modAPI.utils.alphaPlus(enemy: EnemyEntity) // Enhanced elite window.modAPI.utils.realmbreaker(enemy: EnemyEntity) // Multiple realmbreaker variants window.modAPI.utils.corrupted(enemy: EnemyEntity) // Corrupted version . Quest Creation . window.modAPI.utils.createCombatEvent(enemy: LocationEnemy) window.modAPI.utils.createCullingMission(monster, location, description, favour) window.modAPI.utils.createCollectionMission(item, location, description, favour) window.modAPI.utils.createHuntQuest(monster, location, description, encounter, spiritStones, reputation, reputationName, maxReputation, characterEncounter?) . Balance Calculations . window.modAPI.utils.getExpectedHealth(realm: Realm, progress: RealmProgress) window.modAPI.utils.getExpectedPower(realm: Realm, progress: RealmProgress) window.modAPI.utils.getExpectedDefense(realm: Realm, progress: RealmProgress) window.modAPI.utils.getExpectedPlayerPower(realm: Realm, progress: RealmProgress) window.modAPI.utils.getRealmQi(realm: Realm, realmProgress: RealmProgress) window.modAPI.utils.getNumericReward(base: number, realm: Realm, progress: RealmProgress) . Equipment Calculations . window.modAPI.utils.getClothingDefense(realm: Realm, scale: number) window.modAPI.utils.getClothingCharisma(realm: Realm, mult: number) window.modAPI.utils.getBreakthroughCharisma(realm: Realm, mult: number) . Event Helpers . window.modAPI.utils.createQuestionAnswerList(key: string, questions: QuestionAnswer[], exit: QuestionAnswer, showExitOnAllComplete?: boolean) window.modAPI.utils.flag(flag: string) // Convert flag name to game flag format . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/modapi.html#utility-functions",
    
    "relUrl": "/concepts/modapi.html#utility-functions"
  },"231": {
    "doc": "ModAPI Reference",
    "title": "Examples",
    "content": "Adding a Custom Item . const myTreasure: TreasureItem = { kind: 'treasure', name: 'The Best Treasure', description: 'Wooo mod content.', icon: icon, stacks: 1, rarity: 'mundane', realm: 'coreFormation', }; window.modAPI.actions.addItem(myTreasure); . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/modapi.html#examples",
    
    "relUrl": "/concepts/modapi.html#examples"
  },"232": {
    "doc": "Money Step",
    "title": "Money Step",
    "content": "Modifies the player’s spirit stones (money). ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/money.html",
    
    "relUrl": "/events/steps/money.html"
  },"233": {
    "doc": "Money Step",
    "title": "Interface",
    "content": "interface ChangeMoneyStep { kind: 'money'; condition?: string; amount: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/money.html#interface",
    
    "relUrl": "/events/steps/money.html#interface"
  },"234": {
    "doc": "Money Step",
    "title": "Properties",
    "content": "kind - Always 'money' . amount - String expression for amount to add/remove. Use negative values to remove money. condition (optional) - Flag expression that must evaluate to true for the step to execute. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/money.html#properties",
    
    "relUrl": "/events/steps/money.html#properties"
  },"235": {
    "doc": "Money Step",
    "title": "Examples",
    "content": "Add Money . { kind: 'money', amount: '500' } . Remove Money . { kind: 'money', amount: '-200' } . Variable Amount . { kind: 'money', amount: 'realm * 100' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/money.html#examples",
    
    "relUrl": "/events/steps/money.html#examples"
  },"236": {
    "doc": "Override Player Realm Step",
    "title": "Override Player Realm Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/overrideplayerrealm.html",
    
    "relUrl": "/events/steps/overrideplayerrealm.html"
  },"237": {
    "doc": "Override Player Realm Step",
    "title": "Introduction",
    "content": "The Override Player Realm Step temporarily overrides the player’s cultivation realm for game systems without affecting actual cultivation progress. This allows for narrative based advancement in shops without a true breakthrough. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/overrideplayerrealm.html#introduction",
    
    "relUrl": "/events/steps/overrideplayerrealm.html#introduction"
  },"238": {
    "doc": "Override Player Realm Step",
    "title": "Interface",
    "content": "interface OverridePlayerRealmStep { kind: 'overridePlayerRealm'; condition?: string; realm: Realm; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/overrideplayerrealm.html#interface",
    
    "relUrl": "/events/steps/overrideplayerrealm.html#interface"
  },"239": {
    "doc": "Override Player Realm Step",
    "title": "Properties",
    "content": "kind - Always 'overridePlayerRealm' . realm - Target realm to override to . | Must be a valid Realm type value | Affects all game systems that check player realm | . condition (optional) - Conditional execution . | Flag expression that must be true for override to activate | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/overrideplayerrealm.html#properties",
    
    "relUrl": "/events/steps/overrideplayerrealm.html#properties"
  },"240": {
    "doc": "Override Player Realm Step",
    "title": "Examples",
    "content": "{ kind: 'overridePlayerRealm', realm: 'coreFormation' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/overrideplayerrealm.html#examples",
    
    "relUrl": "/events/steps/overrideplayerrealm.html#examples"
  },"241": {
    "doc": "Packaging & Testing",
    "title": "Packaging &amp; Testing",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/packaging-testing.html#packaging--testing",
    
    "relUrl": "/guides/packaging-testing.html#packaging--testing"
  },"242": {
    "doc": "Packaging & Testing",
    "title": "Introduction",
    "content": "Once you’ve created your mod content, you need to package it for distribution and thoroughly test it to ensure it works correctly in the game. This guide covers the build process, testing strategies, to allow you to quickly get your ideas into the game. The packaging system compiles your TypeScript code, bundles assets, and creates a distributable ZIP file that the game can load. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/packaging-testing.html#introduction",
    
    "relUrl": "/guides/packaging-testing.html#introduction"
  },"243": {
    "doc": "Packaging & Testing",
    "title": "Building Your Mod",
    "content": "The Build Process . When you run the build command, several things happen automatically: . | TypeScript Compilation - Your .ts files are compiled to a single JavaScript file | Asset Bundling - Images and other resources are processed and included | ZIP Creation - Everything is packaged into a single mod file | . # Standard build - creates distributable mod npm run build . Build Output . After running npm run build, you’ll find your packaged mod in the builds/ folder: . builds/ └── my-mod-1.0.0.zip ├── mod.js # Compiled mod code ├── assets/ # Your images and resources │ ├── items/ │ ├── characters/ │ └── locations/ └── package.json # Mod metadata . Build Configuration . The build process is configured through several files: . package.json - Contains mod metadata that appears in-game: . { \"name\": \"my-cultivation-mod\", \"version\": \"1.0.0\", \"description\": \"Adds new tea-based cultivation techniques\", \"author\": { \"name\": \"TeaMaster\" } } . tsconfig.json - TypeScript compilation settings (usually no changes needed) . vite.config.ts - Build tool configuration (advanced users only) . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/packaging-testing.html#building-your-mod",
    
    "relUrl": "/guides/packaging-testing.html#building-your-mod"
  },"244": {
    "doc": "Packaging & Testing",
    "title": "Testing Your Mod",
    "content": "Setting Up Test Environment . To test your mod, you need to install it in the game: . | Locate your game directory - Find where the game executable is installed | Create a mods folder - Make a new mods/ directory next to the game exe | Copy your mod - Place your built ZIP file in the mods folder | . Final structure: . Game Directory/ ├── Ascend from Nine Mountains.exe └── mods/ └── my-cultivation-mod-1.0.0.zip . Then restart the game, and you should see your mod be loaded. Enabling Debug Mode . For easier testing and debugging, enable dev mode: . | Create a devMode file - Add an empty file named devMode (no extension) next to the game exe | Enhanced logging - The game will show detailed console output | Error visibility - Mod errors will be clearly displayed | . Structure with dev mode: . Game Directory/ ├── Ascend from Nine Mountains.exe ├── devMode # Empty file, no extension └── mods/ └── my-cultivation-mod-1.0.0.zip . Your mod is now ready for thorough testing! Once you’re confident it works correctly, you can move on to publishing it for the community. Next: Publishing Your Mod . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/packaging-testing.html#testing-your-mod",
    
    "relUrl": "/guides/packaging-testing.html#testing-your-mod"
  },"245": {
    "doc": "Packaging & Testing",
    "title": "Packaging & Testing",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/packaging-testing.html",
    
    "relUrl": "/guides/packaging-testing.html"
  },"246": {
    "doc": "Pass Time Step",
    "title": "Pass Time Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/passtime.html",
    
    "relUrl": "/events/steps/passtime.html"
  },"247": {
    "doc": "Pass Time Step",
    "title": "Introduction",
    "content": "The Pass Time Step advances the game calendar by a specified number of days. This step represents activities that require temporal progression like training, travel, recovery, or waiting. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/passtime.html#introduction",
    
    "relUrl": "/events/steps/passtime.html#introduction"
  },"248": {
    "doc": "Pass Time Step",
    "title": "Interface",
    "content": "interface PassTimeStep { kind: 'passTime'; condition?: string; days: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/passtime.html#interface",
    
    "relUrl": "/events/steps/passtime.html#interface"
  },"249": {
    "doc": "Pass Time Step",
    "title": "Properties",
    "content": "kind - Always 'passTime' . days - Number of days to advance . | String expression that evaluates to a positive integer | Can be literal numbers, mathematical expressions, or flag references | . condition (optional) - Conditional execution . | Flag expression that must be true for time to pass | Step is skipped if condition fails | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/passtime.html#properties",
    
    "relUrl": "/events/steps/passtime.html#properties"
  },"250": {
    "doc": "Pass Time Step",
    "title": "Examples",
    "content": "Basic Time Passage . { kind: 'passTime', days: '7' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/passtime.html#examples",
    
    "relUrl": "/events/steps/passtime.html#examples"
  },"251": {
    "doc": "Progress Relationship Step",
    "title": "Progress Relationship Step",
    "content": "The Progress Relationship Step advances the player’s relationship with a character to the next tier when approval thresholds are met. It marks significant milestones in character relationships. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/progressrelationship.html",
    
    "relUrl": "/events/steps/progressrelationship.html"
  },"252": {
    "doc": "Progress Relationship Step",
    "title": "Interface",
    "content": "interface ProgressRelationshipStep { kind: 'progressRelationship'; condition?: string; character: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/progressrelationship.html#interface",
    
    "relUrl": "/events/steps/progressrelationship.html#interface"
  },"253": {
    "doc": "Progress Relationship Step",
    "title": "Properties",
    "content": "kind - Always 'progressRelationship' . character - Character name (case-sensitive string) . condition (optional) - Flag expression for conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/progressrelationship.html#properties",
    
    "relUrl": "/events/steps/progressrelationship.html#properties"
  },"254": {
    "doc": "Progress Relationship Step",
    "title": "Examples",
    "content": "Natural Relationship Progression . [ { kind: 'text', text: 'Your shared experiences have brought you closer together.', }, { kind: 'progressRelationship', character: 'Beishi Ji', }, ]; . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/progressrelationship.html#examples",
    
    "relUrl": "/events/steps/progressrelationship.html#examples"
  },"255": {
    "doc": "Project Setup",
    "title": "Project Setup",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/project-setup.html",
    
    "relUrl": "/guides/project-setup.html"
  },"256": {
    "doc": "Project Setup",
    "title": "Introduction",
    "content": "Before you can start creating content for your AFNM mod, you need to properly configure your development environment and project metadata. This guide will walk you through cloning the template, installing dependencies, and customizing the project for your specific mod. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/project-setup.html#introduction",
    
    "relUrl": "/guides/project-setup.html#introduction"
  },"257": {
    "doc": "Project Setup",
    "title": "Development Environment",
    "content": "Prerequisites . | Node.js | Code Editor (Visual Studio Code recommended) | Git (for version control) | Basic TypeScript knowledge (helpful but not required) | . Step 1: Get the Template . You have a couple options to start your project: . Option A: Fork the Repository (Recommended) . | Visit the AFNM Example Mod repository | Click “Fork” to create your own copy | Clone your fork: git clone https://github.com/YOUR-USERNAME/AfnmExampleMod.git | . Option B: Download the Template . | Download the repository as a ZIP file | Extract it to your desired location | Initialize a new git repository: git init | . Step 2: Install Dependencies . Open a terminal in your project directory and run: . npm install . This will download all necessary dependencies including: . | TypeScript compiler and type definitions | Build tools (Vite, Rollup) | AFNM type definitions for IntelliSense | Development utilities | . If you’re using VS Code and haven’t worked with TypeScript before, it should automatically prompt you to install recommended extensions. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/project-setup.html#development-environment",
    
    "relUrl": "/guides/project-setup.html#development-environment"
  },"258": {
    "doc": "Project Setup",
    "title": "Project Configuration",
    "content": "Step 3: Configure Mod Metadata . Open package.json in your project root. You’ll see a configuration block at the top: . { \"name\": \"my-game-mod\", \"version\": \"0.0.1\", \"description\": \"A mod for AFNM\", \"author\": { \"name\": \"&lt;your name&gt;\" } } . Customize these fields: . { \"name\": \"my-awesome-cultivation-mod\", \"version\": \"1.0.0\", \"description\": \"Adds new cultivation techniques and mystical locations\", \"author\": { \"name\": \"YourModdingName\" } } . Naming Guidelines . | name: Use lowercase with hyphens, no spaces | version: Follow semantic versioning (major.minor.patch) | description: Brief, descriptive summary of your mod’s features | author.name: Your preferred modding alias. Using your real name is not recommended | . Step 4: Verify Setup . Test that everything is working correctly: . # Run the development build npm run dev # Build the mod package npm run build . If successful, you should see: . | No compilation errors | A builds/ folder with your packaged mod | TypeScript IntelliSense working in your editor | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/project-setup.html#project-configuration",
    
    "relUrl": "/guides/project-setup.html#project-configuration"
  },"259": {
    "doc": "Project Setup",
    "title": "Project Structure",
    "content": "Understanding the project layout will help you navigate and organize your content: . AfnmExampleMod/ ├── src/ │ ├── modContent/ │ │ └── index.ts # Your main mod entry point │ ├── assets/ # Images and other resources │ └── types/ # TypeScript type definitions ├── builds/ # Generated mod packages ├── docs/ # Documentation (this site) ├── package.json # Project metadata └── tsconfig.json # TypeScript configuration . Key Files . | src/modContent/index.ts - Where you’ll write your mod logic | src/assets/ - Store images, sounds, and other resources | package.json - Contains your mod’s metadata and version | builds/ - Generated when you run npm run build | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/project-setup.html#project-structure",
    
    "relUrl": "/guides/project-setup.html#project-structure"
  },"260": {
    "doc": "Project Setup",
    "title": "Development Workflow",
    "content": "Basic Commands . # Install dependencies (run once after setup) npm install # Development mode with file watching npm run dev # Build final mod package npm run build # Clean build artifacts npm run clean . IDE Setup (VS Code) . Recommended Extensions: . | TypeScript and JavaScript Language Features (built-in) | Prettier - Code formatter | . Settings for optimal experience: . | Enable TypeScript IntelliSense | Set up auto-formatting on save | Configure Git integration for version control | . Version Control . It’s highly recommended to use Git for your mod development: . # Initialize repository (if not already done) git init # Add your changes git add . # Commit your work git commit -m \"Initial mod setup\" # Create development branch git checkout -b feature/new-techniques . Or even better, use Github Desktop to make working with git simple. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/project-setup.html#development-workflow",
    
    "relUrl": "/guides/project-setup.html#development-workflow"
  },"261": {
    "doc": "Project Setup",
    "title": "Next Steps",
    "content": "With your environment set up, you’re ready to start building content! The next step is learning about the ModAPI and creating your first mod content. Continue to: Mod Development Guide . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/project-setup.html#next-steps",
    
    "relUrl": "/guides/project-setup.html#next-steps"
  },"262": {
    "doc": "Publishing Your Mod",
    "title": "Publishing Your Mod",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/publishing.html",
    
    "relUrl": "/guides/publishing.html"
  },"263": {
    "doc": "Publishing Your Mod",
    "title": "Introduction",
    "content": "Congratulations on creating your AFNM mod! Now it’s time to share your work with the cultivation community. This guide covers publishing to the Steam Workshop, managing updates, and building a following for your mod. The Steam Workshop integration makes it easy for players to discover, install, and automatically update your mods, providing the best experience for both creators and users. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/publishing.html#introduction",
    
    "relUrl": "/guides/publishing.html#introduction"
  },"264": {
    "doc": "Publishing Your Mod",
    "title": "Steam Workshop Publishing",
    "content": "Prerequisites . Before you can publish your mod: . | Steam Account - You need to own Ascend from Nine Mountains on Steam | Completed Mod - Your mod should be thoroughly tested and polished | Final Build - A packaged mod ZIP file from npm run build | Workshop Agreement - You’ll need to accept Steam’s Workshop terms | . Using the Mod Uploader . AFNM provides a dedicated uploader tool for Steam Workshop publishing: . Location: /uploader/Mod Uploader 1.0.0 Portable.exe (in your fork of this repository) . Publishing Process . | Create New Mod Entry . | Click “Upload New Mod” | Select your mod’s ZIP file from the builds/ folder | . | Configure Workshop Listing . | Title: Use your mod’s name from package.json | Description: Detailed explanation of features and content | Preview Image: Eye-catching screenshot or logo | Tags: Relevant categories (techniques, items, locations, etc.) | Visibility: Public, Friends-only, or Private | . | Upload Process . | Click “Upload” to begin the process | The tool will package and upload your content | Steam will process and validate the submission | . | Workshop Page Creation . | Once uploaded, Steam generates a Workshop page | You can edit details directly in the Steam Workshop UI | Add additional screenshots, detailed changelog, etc. | . | Updating your mod . | If you wish to make changes, then simply select the mod from the list of your mods in the uploader, change the settings, and click update again. | . | . Workshop Page Optimization . Writing Effective Descriptions: . # Tea Master's Journey - A Cultivation Mod Transform your cultivation experience with the ancient art of tea mastery! ## Features ✨ 20+ New Tea-Based Items - Restore qi, boost stats, unlock hidden potential 🏮 5 Unique NPCs - Meet tea masters with deep wisdom and challenging quests ⚔️ 3 New Cultivation Techniques - Harness the power of spiritual brewing 🗺️ 2 Custom Locations - Explore mystical tea gardens and ancient breweries ## Requirements - Any cultivation realm (content scales appropriately) - Compatible with existing saves - No conflicts with other major mods . Essential Elements: . | Clear feature list - Bullet points work well | Requirements - Realm, save compatibility, conflicts | Screenshots - Show your content in action | Installation notes - Any special requirements | . Welcome to the AFNM modding community! Your contribution helps make the cultivation journey richer for all players. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/guides/publishing.html#steam-workshop-publishing",
    
    "relUrl": "/guides/publishing.html#steam-workshop-publishing"
  },"265": {
    "doc": "Qi Step",
    "title": "Qi Step",
    "content": "Modifies the player’s qi points. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/qi.html",
    
    "relUrl": "/events/steps/qi.html"
  },"266": {
    "doc": "Qi Step",
    "title": "Interface",
    "content": "interface QiStep { kind: 'qi'; condition?: string; amount: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/qi.html#interface",
    
    "relUrl": "/events/steps/qi.html#interface"
  },"267": {
    "doc": "Qi Step",
    "title": "Properties",
    "content": "kind - Always 'qi' . amount - String expression for amount to add/remove. Use negative values to remove qi. condition (optional) - Flag expression that must evaluate to true for the step to execute. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/qi.html#properties",
    
    "relUrl": "/events/steps/qi.html#properties"
  },"268": {
    "doc": "Qi Step",
    "title": "Examples",
    "content": "Add Qi . { kind: 'qi', amount: '50' } . Remove Qi . { kind: 'qi', amount: '-30' } . Variable Amount . { kind: 'qi', amount: 'dantian * 5' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/qi.html#examples",
    
    "relUrl": "/events/steps/qi.html#examples"
  },"269": {
    "doc": "Remove Item Step",
    "title": "Remove Item Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/removeitem.html",
    
    "relUrl": "/events/steps/removeitem.html"
  },"270": {
    "doc": "Remove Item Step",
    "title": "Introduction",
    "content": "The Remove Item Step removes items from the player’s inventory, typically as payment, consumption, or quest requirements. It handles various scenarios from simple item costs to complex alternative payment options, ensuring players can spend resources as part of their cultivation journey. This step provides flexible payment mechanisms and supports alternate item options, making it essential for creating meaningful resource costs and consumption mechanics in events. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/removeitem.html#introduction",
    
    "relUrl": "/events/steps/removeitem.html#introduction"
  },"271": {
    "doc": "Remove Item Step",
    "title": "Interface",
    "content": "interface RemoveItemStep { kind: 'removeItem'; condition?: string; item: ItemDesc; alternates?: ItemDesc[]; amount: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/removeitem.html#interface",
    
    "relUrl": "/events/steps/removeitem.html#interface"
  },"272": {
    "doc": "Remove Item Step",
    "title": "Properties",
    "content": "Required Properties . kind - Always 'removeItem' . | Identifies this as an item removal step | . item - Primary item to remove . | Uses ItemDesc format for flexible item specification | Must reference an existing item by name | This is the preferred item to remove if available | . amount - Quantity expression . | String expression that evaluates to the number of items to remove | Can be literal numbers, mathematical expressions, or flag references | Evaluated when the step executes | . Optional Properties . condition - Conditional execution . | Flag expression that must be true for removal to occur | Step is skipped if condition fails | Useful for conditional costs based on player state | . alternates - Alternative items . | Array of ItemDesc objects that can be removed instead of the primary item | System checks primary item first, then alternates in order | First available item type gets removed | Useful for flexible payment systems | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/removeitem.html#properties",
    
    "relUrl": "/events/steps/removeitem.html#properties"
  },"273": {
    "doc": "Remove Item Step",
    "title": "Examples",
    "content": "Simple Payment . { kind: 'removeItem', item: { name: 'Spirit Stone' }, amount: '1' } . Quest Item Consumption . { kind: 'removeItem', item: { name: 'Ancient Key Fragment' }, amount: '3' } . Variable Costs . { kind: 'removeItem', item: { name: 'Cultivation Pill' }, amount: 'realm + 1' // Higher realms pay more } . Flexible Payment Options . { kind: 'removeItem', item: { name: 'Gold Spirit Stone' }, alternates: [ { name: 'Silver Spirit Stone' }, { name: 'Copper Spirit Stone' } ], amount: '3' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/removeitem.html#examples",
    
    "relUrl": "/events/steps/removeitem.html#examples"
  },"274": {
    "doc": "Replace Item Step",
    "title": "Replace Item Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/replaceitem.html",
    
    "relUrl": "/events/steps/replaceitem.html"
  },"275": {
    "doc": "Replace Item Step",
    "title": "Introduction",
    "content": "The Replace Item Step transforms one item into another, making it perfect for upgrades, refinements, transmutations, and magical transformations. Unlike separate remove/add operations, this step handles equipped items directly and maintains item relationships seamlessly. This step is essential for creating progression systems where players can improve their existing gear and consumables through cultivation processes, crafting upgrades, and mystical transformations. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/replaceitem.html#introduction",
    
    "relUrl": "/events/steps/replaceitem.html#introduction"
  },"276": {
    "doc": "Replace Item Step",
    "title": "Interface",
    "content": "interface ReplaceItemStep { kind: 'replaceItem'; condition?: string; source: ItemDesc; target: ItemDesc; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/replaceitem.html#interface",
    
    "relUrl": "/events/steps/replaceitem.html#interface"
  },"277": {
    "doc": "Replace Item Step",
    "title": "Properties",
    "content": "Required Properties . kind - Always 'replaceItem' . | Identifies this as an item replacement step | . source - Item to be replaced . | Uses ItemDesc format to specify the exact item to transform | Must exist in player’s inventory or be equipped | Can include quality tiers and enchantments for precise targeting | . target - Item to replace it with . | Uses ItemDesc format to specify the result item | Can include quality improvements and new enchantments | Maintains equipped status if source was equipped | . Optional Properties . condition - Conditional execution . | Flag expression that must be true for replacement to occur | Step is skipped if condition fails | Useful for upgrade requirements and progression gates | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/replaceitem.html#properties",
    
    "relUrl": "/events/steps/replaceitem.html#properties"
  },"278": {
    "doc": "Replace Item Step",
    "title": "Examples",
    "content": "Simple Weapon Upgrade . { kind: 'replaceItem', source: { name: 'Iron Sword' }, target: { name: 'Steel Sword' } } . Pill Refinement . { kind: 'replaceItem', source: { name: 'Crude Healing Pill' }, target: { name: 'Refined Healing Pill' } } . Artifact Enhancement . { kind: 'replaceItem', source: { name: 'Ancient Ring' }, target: { name: 'Ancient Ring', qualityTier: 2 } } . Quality Tier Progression . { kind: 'replaceItem', source: { name: 'Cultivation Blade', qualityTier: 1 }, target: { name: 'Cultivation Blade', qualityTier: 2 }, condition: 'metalsmithingLevel &gt;= 3' } . Enchantment Addition . { kind: 'replaceItem', source: { name: 'Spirit Sword' }, target: { name: 'Spirit Sword', enchantment: { kind: 'sharpness', rarity: 'qitouched' } } } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/replaceitem.html#examples",
    
    "relUrl": "/events/steps/replaceitem.html#examples"
  },"279": {
    "doc": "Scaling System",
    "title": "Scaling System",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/scaling.html",
    
    "relUrl": "/concepts/scaling.html"
  },"280": {
    "doc": "Scaling System",
    "title": "Introduction",
    "content": "The Scaling system is the mathematical engine that powers all dynamic value calculations in Ascend from Nine Mountains. Whether you’re creating techniques that deal damage, buffs that modify stats, or crafting effects that scale with player progression, understanding scaling is essential for creating balanced, engaging content. Every damage number, healing amount, buff strength, and stat modifier flows through this system, creating the progression curves that make cultivation feel meaningful. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/scaling.html#introduction",
    
    "relUrl": "/concepts/scaling.html#introduction"
  },"281": {
    "doc": "Scaling System",
    "title": "Core Architecture",
    "content": "The Scaling Interface . interface Scaling { value: number; // Base multiplier stat?: string; // Stat to multiply by scaling?: string; // Special scaling mode eqn?: string; // Custom equation max?: Scaling; // Cap the final value upgradeKey?: string; // Links to mastery upgrades } . Evaluation Formula . The system follows a predictable pattern: Base × Stat × Scaling × Equation . Final Value = value × [stat] × [scaling] × [eqn result] . Each component is optional, allowing for simple flat values or complex multi-variable calculations. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/scaling.html#core-architecture",
    
    "relUrl": "/concepts/scaling.html#core-architecture"
  },"282": {
    "doc": "Scaling System",
    "title": "Deep Dive: Scaling Patterns",
    "content": "Pattern 1: Flat Values . When to use: Fixed effects, utility abilities, resource generation that shouldn’t scale with combat stats. // Always grants exactly 3 stacks { value: 3, stat: undefined // No stat multiplication } // Fixed damage (rare, usually for utility) { value: 100, stat: undefined } // Equation-only calculation { value: 1, stat: undefined, eqn: 'toxicity * 2' // Result comes entirely from equation } . Real Example: Concentrate Force scales only with Ripple Force stacks: . amount: { value: 1, stat: undefined, scaling: rippleForce.name, // 1 damage per stack, no stat scaling max: { value: 7, upgradeKey: 'maxStacks' } } . Pattern 2: Basic Stat Scaling . When to use: Standard techniques, straightforward damage/healing effects. // 150% of player's power as damage { value: 1.5, stat: 'power' } // Barrier equal to 300% of defense { value: 3, stat: 'defense' } // Crafting perfection based on control { value: 0.8, stat: 'control' } . Real Example: Sun Blast technique: . amount: { value: 2, // 200% of power stat: 'power', upgradeKey: 'power' // Improves with mastery } . Pattern 3: Stack-Based Scaling . When to use: Buff effects that scale with accumulated stacks, combo systems. // Damage per buff stack { value: 0.3, // 30% power per stack stat: 'power', scaling: 'stacks' } // Fixed amount per stack (no stat scaling) { value: 10, // 10 damage per stack scaling: 'stacks' } . Real Example: Blossom technique scaling with Vitality: . amount: { value: 0.3, stat: 'power', scaling: 'stacks' // 30% power × Vitality stacks } . Pattern 4: Game State Scaling . When to use: Effects that respond to dynamic game conditions like toxicity, stability, or qi levels. // Power increases with risk (toxicity) { value: 0.1, stat: 'power', scaling: 'toxicity' // More toxic = more powerful } // Cost scales with current stability { value: -50, scaling: 'stability' // Costs current stability } . Real Example: Lianjin Bandolier toxicity scaling: . stats: { power: { value: 0.005, // 0.5% power per toxicity point stat: 'power', scaling: 'toxicity', max: { value: 1, stat: 'power' } // Capped at 100% bonus } } . Pattern 5: Cross-Buff Scaling . When to use: Synergies between different buffs, combo effects that reward specific buff combinations. // Scale with specific buff stacks { value: 1, scaling: specificBuffName // Uses that buff's current stacks } // Scale with target's debuffs { value: 2, stat: 'power', scaling: 'target.' + debuffName // Enemy's debuff stacks } . Real Example: Celestial Discordance: . amount: { value: 1, scaling: 'target.' + harmonicDiscord.name // Damage per target's discord } . Pattern 6: Complex Equations . When to use: Percentage calculations, conditional logic, multi-variable formulas. // Toxicity percentage bonus { value: 3, stat: 'power', eqn: 'toxicity/maxtoxicity' // Scales with toxicity % } // Conditional damage boost { value: 1, stat: 'power', eqn: 'qi &lt; maxqi * 0.3 ? 2 : 1' // Double power when low on qi } // Multi-buff synergy { value: 4, eqn: `${flag(buff1.name)} + ${flag(buff2.name)}` // Sum of two buffs } . Pattern 7: Capped Scaling . When to use: Preventing runaway scaling, maintaining game balance. // Stat scaling with hard cap { value: 0.05, // 5% per stack stat: 'power', scaling: 'stacks', max: { value: 2, stat: 'power' } // Max 200% power bonus } // Fixed numerical cap { value: 10, scaling: 'stacks', max: { value: 100 } // Never exceeds 100 } . Real Example: Ripple Force power bonus: . stats: { power: { value: 0.05, // 5% per stack stat: 'power', scaling: 'stacks', max: { value: 2, // Caps at 200% power stat: 'power' } } } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/scaling.html#deep-dive-scaling-patterns",
    
    "relUrl": "/concepts/scaling.html#deep-dive-scaling-patterns"
  },"283": {
    "doc": "Scaling System",
    "title": "Practical Examples by School",
    "content": "Fist School: Stack Accumulation . // Generate Flow stacks { kind: 'buffSelf', buff: flow, amount: { value: 1 } // Always 1 stack } // Convert Flow to damage { kind: 'damage', amount: { value: 0.8, // 80% power per Flow stack stat: 'power', scaling: flow.name } } . Weapon School: Progressive Momentum . // Momentum builds over turns stats: { power: { value: 0.02, // 2% power per stack stat: 'power', scaling: 'stacks', max: { value: 0.5, stat: 'power' } // 50% power cap } } . Celestial School: Dual Attunement . // Power from both light and dark stats: { celestialBoost: { value: 4, eqn: `${flag(lunarAttunement.name)} + ${flag(solarAttunement.name)}` } } . Blood School: Risk/Reward . // High toxicity = high power { value: 0.1, stat: 'power', scaling: 'toxicity', // Risk increases reward max: { value: 3, stat: 'power' } // 300% power cap } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/scaling.html#practical-examples-by-school",
    
    "relUrl": "/concepts/scaling.html#practical-examples-by-school"
  },"284": {
    "doc": "Scaling System",
    "title": "Advanced Techniques",
    "content": "Upgrade Key Integration . Link scaling to mastery progression: . { value: 0.65, stat: 'intensity', upgradeKey: 'completion' // Improves as player masters technique } // Upgrade affects caps { value: 3, scaling: 'stacks', max: { value: 5, upgradeKey: 'maxStacks' // Max stacks increase with mastery } } . State-Dependent Effects . // Desperation bonus { kind: 'perfection', amount: { value: 20, eqn: '(stability &lt; 30) * 20' // Bonus when desperate } } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/scaling.html#advanced-techniques",
    
    "relUrl": "/concepts/scaling.html#advanced-techniques"
  },"285": {
    "doc": "Scaling System",
    "title": "Tips and Best Practices",
    "content": "Scaling Guidelines . Damage Multipliers: . | Basic attacks: 0.5-1.2× stat | Strong techniques: 1.5-2.5× stat | Ultimate abilities: 3.0-4.0× stat | Per-stack scaling: 0.05-0.1× stat per stack | . When to Use Each Pattern . | Flat Values (stat: undefined): . | Utility effects (cleanse, dispel) | Resource generation/consumption | Equation-only calculations | Upgrade-driven progression | . | Basic Stat Scaling: . | Standard damage and healing | Straightforward stat bonuses | Effects that should grow with character power | . | Stack Scaling: . | Combo systems and buff interactions | Resource accumulation mechanics | . | Equation Scaling: . | Complex conditional logic | Percentage-based effects | Multi-variable calculations | . | . Balance Considerations . | Always cap percentage scaling to prevent exponential growth | Use meaningful stat relationships (power for damage, control for crafting) | Test edge cases thoroughly, especially with equations | Consider upgrade keys for meaningful progression | Make patterns intuitive - players will optimize around your systems | . Common Pitfalls . | Uncapped scaling - Leads to broken balance | Illogical stat relationships - Confuses players | Overly complex equations - Hard to debug and understand | Missing progression - Static effects feel unrewarding | Inconsistent patterns - Makes the system unpredictable | . The scaling system is powerful and flexible. Master these patterns, and you’ll create techniques and effects that feel both impactful and balanced, scaling naturally with player progression while maintaining strategic depth. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/concepts/scaling.html#tips-and-best-practices",
    
    "relUrl": "/concepts/scaling.html#tips-and-best-practices"
  },"286": {
    "doc": "Set Aid Breakthrough Cooldown Step",
    "title": "Set Aid Breakthrough Cooldown Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/setaidbreakthroughcooldown.html",
    
    "relUrl": "/events/steps/setaidbreakthroughcooldown.html"
  },"287": {
    "doc": "Set Aid Breakthrough Cooldown Step",
    "title": "Introduction",
    "content": "The Set Aid Breakthrough Cooldown Step sets a cooldown period for character aid breakthrough interactions, preventing repeated help with the same character’s cultivation advancement. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/setaidbreakthroughcooldown.html#introduction",
    
    "relUrl": "/events/steps/setaidbreakthroughcooldown.html#introduction"
  },"288": {
    "doc": "Set Aid Breakthrough Cooldown Step",
    "title": "Interface",
    "content": "interface SetAidBreakthroughCooldownStep { kind: 'setAidBreakthroughCooldown'; condition?: string; character: string; cooldown: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/setaidbreakthroughcooldown.html#interface",
    
    "relUrl": "/events/steps/setaidbreakthroughcooldown.html#interface"
  },"289": {
    "doc": "Set Aid Breakthrough Cooldown Step",
    "title": "Properties",
    "content": "kind - Always 'setAidBreakthroughCooldown' . character - Character name . | String identifying which character’s aid breakthrough cooldown to set | Must reference an existing character in the game | . cooldown - Cooldown duration expression . | String expression evaluating to number of time periods to wait | Typically measured in months or time cycles | Can be literal numbers, mathematical expressions, or flag references | . condition (optional) - Conditional execution . | Flag expression that must be true for the cooldown to be set | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/setaidbreakthroughcooldown.html#properties",
    
    "relUrl": "/events/steps/setaidbreakthroughcooldown.html#properties"
  },"290": {
    "doc": "Set Aid Breakthrough Cooldown Step",
    "title": "Examples",
    "content": "{ kind: 'setAidBreakthroughCooldown', character: 'Lingxi Gian', cooldown: '3' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/setaidbreakthroughcooldown.html#examples",
    
    "relUrl": "/events/steps/setaidbreakthroughcooldown.html#examples"
  },"291": {
    "doc": "Set Character Step",
    "title": "Set Character Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/setcharacter.html",
    
    "relUrl": "/events/steps/setcharacter.html"
  },"292": {
    "doc": "Set Character Step",
    "title": "Introduction",
    "content": "Sets the active character for the current event location, displaying their image in the event screen . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/setcharacter.html#introduction",
    
    "relUrl": "/events/steps/setcharacter.html#introduction"
  },"293": {
    "doc": "Set Character Step",
    "title": "Interface",
    "content": "interface SetCharacterStep { kind: 'setCharacter'; character: string; condition?: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/setcharacter.html#interface",
    
    "relUrl": "/events/steps/setcharacter.html#interface"
  },"294": {
    "doc": "Set Character Step",
    "title": "Properties",
    "content": ". | kind - Always 'setCharacter' . | character - Character to set as active . | condition (optional) - Conditional execution . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/setcharacter.html#properties",
    
    "relUrl": "/events/steps/setcharacter.html#properties"
  },"295": {
    "doc": "Set Character Step",
    "title": "Examples",
    "content": "{ kind: 'setCharacter', character: 'WanderingMerchant' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/setcharacter.html#examples",
    
    "relUrl": "/events/steps/setcharacter.html#examples"
  },"296": {
    "doc": "Speech Step",
    "title": "Speech Step",
    "content": "Creates character dialogue by displaying text attributed to a specific character. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/speech.html",
    
    "relUrl": "/events/steps/speech.html"
  },"297": {
    "doc": "Speech Step",
    "title": "Interface",
    "content": "interface SpeechStep { kind: 'speech'; condition?: string; character: string; text: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/speech.html#interface",
    
    "relUrl": "/events/steps/speech.html#interface"
  },"298": {
    "doc": "Speech Step",
    "title": "Properties",
    "content": "kind - Always 'speech' . character - Name of the speaking character. Must match the character name as defined in your mod. text - The dialogue content. Supports HTML formatting and templates like {forename}, {surname}, {fullname}, and gender-specific text using {male option|female option}. condition (optional) - Flag expression that must evaluate to true for the speech to occur. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/speech.html#properties",
    
    "relUrl": "/events/steps/speech.html#properties"
  },"299": {
    "doc": "Speech Step",
    "title": "Examples",
    "content": "Basic Dialogue . { kind: 'speech', character: 'Elder Chen', text: `\"Welcome to our humble sect, young cultivator. Your journey begins now.\"` } . Multi-Character Conversation . [ { kind: 'speech', character: 'Elder Li', text: `\"Welcome to our sect. Disciple Wang will show you around.\"`, }, { kind: 'speech', character: 'Disciple Wang', text: `\"Master, should I show them to the training grounds first?\"`, }, { kind: 'speech', character: 'Elder Li', text: `\"Yes, and make sure they understand our rules.\"`, }, ]; . Using Templates . { kind: 'speech', character: 'Sect Recruiter', text: `\"Welcome to our ranks, {young man|young lady}. Training begins at dawn.\"` } . { kind: 'speech', character: 'Pi Lip', text: `\"Great to see you {forename}\"` } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/speech.html#examples",
    
    "relUrl": "/events/steps/speech.html#examples"
  },"300": {
    "doc": "Talk To Character Step",
    "title": "Talk To Character Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/talktocharacter.html",
    
    "relUrl": "/events/steps/talktocharacter.html"
  },"301": {
    "doc": "Talk To Character Step",
    "title": "Introduction",
    "content": "Immediately inserts the target characters talk interaction steps into the current conversation. Mainly used to allow sharing of dialogue steps between multiple interaction mechanisms . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/talktocharacter.html#introduction",
    
    "relUrl": "/events/steps/talktocharacter.html#introduction"
  },"302": {
    "doc": "Talk To Character Step",
    "title": "Interface",
    "content": "interface TalkToCharacterStep { kind: 'talkToCharacter'; condition?: string; character: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/talktocharacter.html#interface",
    
    "relUrl": "/events/steps/talktocharacter.html#interface"
  },"303": {
    "doc": "Talk To Character Step",
    "title": "Properties",
    "content": ". | kind - Always 'talkToCharacter' . | character - Character to open dialogue with . | condition (optional) - Conditional execution . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/talktocharacter.html#properties",
    
    "relUrl": "/events/steps/talktocharacter.html#properties"
  },"304": {
    "doc": "Talk To Character Step",
    "title": "Examples",
    "content": "{ kind: 'talkToCharacter', character: 'VillageElder' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/talktocharacter.html#examples",
    
    "relUrl": "/events/steps/talktocharacter.html#examples"
  },"305": {
    "doc": "Team Up Step",
    "title": "Team Up Step",
    "content": "The Team Up Step creates temporary combat partnerships where characters fight alongside the player. It transforms solo encounters into cooperative experiences. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/teamup.html",
    
    "relUrl": "/events/steps/teamup.html"
  },"306": {
    "doc": "Team Up Step",
    "title": "Interface",
    "content": "interface TeamUpStep { kind: 'teamUp'; condition?: string; character: string; fallbackBuff?: Omit&lt;Buff, 'name' | 'icon'&gt;; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/teamup.html#interface",
    
    "relUrl": "/events/steps/teamup.html#interface"
  },"307": {
    "doc": "Team Up Step",
    "title": "Properties",
    "content": "kind - Always 'teamUp' . character - Character name (case-sensitive string) . condition (optional) - Flag expression for conditional execution . fallbackBuff (optional) - Alternative buff if team-up mechanics aren’t available . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/teamup.html#properties",
    
    "relUrl": "/events/steps/teamup.html#properties"
  },"308": {
    "doc": "Team Up Step",
    "title": "Examples",
    "content": "Simple Story Team-Up . { kind: 'teamUp', character: 'Beishi Ji' } . Team-Up with Fallback Benefits . { kind: 'teamUp', character: 'Sect Disciple', fallbackBuff: { stats: { maxbarrier: { value: 0.1, stat: 'maxbarrier' } }, onTechniqueEffects: [ { kind: 'heal', amount: { value: 0.15, stat: 'power' } } ] } } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/teamup.html#examples",
    
    "relUrl": "/events/steps/teamup.html#examples"
  },"309": {
    "doc": "Text Step",
    "title": "Text Step",
    "content": "Displays narrative text, descriptions, and atmospheric details to create immersive storytelling experiences. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/text.html",
    
    "relUrl": "/events/steps/text.html"
  },"310": {
    "doc": "Text Step",
    "title": "Interface",
    "content": "interface TextStep { kind: 'text'; condition?: string; text: string; sfx?: SoundEffectName; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/text.html#interface",
    
    "relUrl": "/events/steps/text.html#interface"
  },"311": {
    "doc": "Text Step",
    "title": "Properties",
    "content": "kind - Always 'text' . text - The content to display. Supports HTML formatting and templates like {forename}, {surname}, {fullname}, and gender-specific text using {male option|female option}. condition (optional) - Flag expression that must evaluate to true for the step to execute. sfx (optional) - Sound effect to play when text appears. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/text.html#properties",
    
    "relUrl": "/events/steps/text.html#properties"
  },"312": {
    "doc": "Text Step",
    "title": "Examples",
    "content": "Basic Text . { kind: 'text', text: 'You stride towards the edge of the bubbling lake, heat rising with each step.' } . Using Templates . { kind: 'text', text: 'Welcome to our sect, {forename}. You are regarded as a promising {young man|young woman} with great potential.' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/text.html#examples",
    
    "relUrl": "/events/steps/text.html#examples"
  },"313": {
    "doc": "Tournament Step",
    "title": "Tournament Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tournament.html",
    
    "relUrl": "/events/steps/tournament.html"
  },"314": {
    "doc": "Tournament Step",
    "title": "Introduction",
    "content": "The Tournament Step creates structured competitive events where the player participates in bracket-style tournaments against multiple opponents. Tournaments are ideal for festival events, sect competitions, and major story milestones that showcase the player’s growing cultivation prowess. The system automatically manages tournament bracket progression, opponent selection from participant pools, and handles victory/defeat outcomes at different stages including first place, second place, and elimination scenarios. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tournament.html#introduction",
    
    "relUrl": "/events/steps/tournament.html#introduction"
  },"315": {
    "doc": "Tournament Step",
    "title": "Interface",
    "content": "interface TournamentStep { kind: 'tournament'; condition?: string; title: string; participantPool: EnemyEntity[]; participantCharacters?: string[]; participantBuffs: Buff[]; guaranteedWinner?: string; victory: EventStep[]; secondPlace?: EventStep[]; defeat: EventStep[]; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tournament.html#interface",
    
    "relUrl": "/events/steps/tournament.html#interface"
  },"316": {
    "doc": "Tournament Step",
    "title": "Properties",
    "content": "Required Properties . kind - Always 'tournament' . | Identifies this as a tournament competition step | . title - Tournament display name . | String shown to players during the tournament | Should be descriptive and thematic | Examples: “Ying Meihua Festival Tournament”, “Sect Ranking Competition” | . participantPool - Array of possible opponents . | Pool of EnemyEntity objects representing potential tournament participants | System randomly selects 7 opponents from this pool for an 8-person bracket | Can include duplicates if pool is smaller than needed | . participantBuffs - Buffs applied during tournament . | Array of Buff objects applied to the player during all tournament fights | Often used to restrict technique schools or provide thematic bonuses | Applied automatically when tournament begins, removed when finished | . victory - Steps for winning the tournament . | Event steps executed when player wins first place | Typically includes rewards, reputation gains, and celebration narrative | Should provide meaningful recognition for the achievement | . defeat - Steps for elimination . | Event steps executed when player is eliminated before the finals | Usually consolation narrative and minor rewards for participation | Helps maintain positive player experience even in defeat | . Optional Properties . condition - Conditional execution . | Flag expression that must be true for tournament to occur | Tournament is skipped if condition fails | Useful for one-time events or progression gates | . participantCharacters - Named character participants . | Array of character names to include as tournament opponents | These characters are converted to EnemyEntity objects and added to the participant pool | Useful for story-driven tournaments featuring specific rivals or allies | . guaranteedWinner - Character guaranteed to reach finals . | Name of a character who will always advance to face the player in the finals | Must be present in either participantPool or participantCharacters | Creates dramatic final confrontations with specific story characters | . secondPlace - Steps for reaching finals but losing . | Event steps executed when player reaches the final match but loses | Provides distinct narrative and rewards for getting second place | If not specified, defeat steps are used for final match losses | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tournament.html#properties",
    
    "relUrl": "/events/steps/tournament.html#properties"
  },"317": {
    "doc": "Tournament Step",
    "title": "Basic Examples",
    "content": "Simple Festival Tournament . { kind: 'tournament', title: 'Village Harvest Tournament', participantPool: [ // Array of EnemyEntity objects representing local competitors villageChampion, travelingMartialArtist, youngProdigy, veteranFighter ], participantBuffs: [ { name: 'Tournament Rules', icon: 'tournament_icon', canStack: false, stats: { weaponDisabled: { value: 1, stat: undefined } }, onTechniqueEffects: [], onRoundEffects: [], stacks: 1 } ], victory: [ { kind: 'text', text: 'The crowd erupts in cheers as you claim victory! You have proven yourself the strongest warrior in the village.' }, { kind: 'money', amount: '5000' }, { kind: 'addItem', item: { name: 'Village Champion Medal' }, amount: '1' } ], defeat: [ { kind: 'text', text: 'Though you fought valiantly, you were eliminated from the tournament. The experience has taught you much about combat.' }, { kind: 'money', amount: '500' } ] } . Sect Ranking Tournament . { kind: 'tournament', title: 'Inner Sect Ranking Competition', participantPool: innerSectDisciples, participantBuffs: [], victory: [ { kind: 'text', text: 'Your mastery has been acknowledged by all. You now stand at the pinnacle of the inner sect disciples.' }, { kind: 'changeReputation', name: 'Sect Standing', amount: '3' }, { kind: 'addItem', item: { name: 'Inner Sect Champion Robes' }, amount: '1' } ], secondPlace: [ { kind: 'text', text: 'You fought admirably and reached the finals, earning the respect of your sect brothers and sisters.' }, { kind: 'changeReputation', name: 'Sect Standing', amount: '2' } ], defeat: [ { kind: 'text', text: 'The competition was fierce, but you gained valuable experience fighting against fellow disciples.' }, { kind: 'changeReputation', name: 'Sect Standing', amount: '-1' } ] } . Tournament with Named Character . { kind: 'tournament', title: 'Championship Finals', participantPool: [ ...tournamentEliteParticipants ], participantCharacters: ['Lingxi Gian'], // Add specific rival participantBuffs: [], guaranteedWinner: 'Lingxi Gian', // Ensures dramatic final confrontation victory: [ { kind: 'text', text: 'In an intense final battle, you manage to overcome Lingxi Gian\\'s formidable cloud techniques. She nods with grudging respect.' }, { kind: 'speech', character: 'Lingxi Gian', text: '\"Impressive. You have earned this victory. Perhaps I misjudged your potential.\"' }, { kind: 'approval', character: 'Lingxi Gian', amount: '2' } ], secondPlace: [ { kind: 'text', text: 'You fight with all your might, but cannot prevail against Lingxi\\'s overwhelming power. Still, reaching the finals against such an opponent is an achievement.' }, { kind: 'speech', character: 'Lingxi Gian', text: '\"You showed more skill than I expected. Continue your cultivation and perhaps next time will be different.\"' } ], defeat: [ { kind: 'text', text: 'You are eliminated before reaching the finals, but the tournament has shown you areas where your cultivation must improve.' } ] } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tournament.html#basic-examples",
    
    "relUrl": "/events/steps/tournament.html#basic-examples"
  },"318": {
    "doc": "Tournament Step",
    "title": "Tournament Mechanics",
    "content": "Bracket Structure . Tournaments in AFNM use an 8-person single-elimination bracket: . | 7 opponents selected from participant pool | Player always participates as the 8th contestant | 3 rounds: Quarterfinals → Semifinals → Finals | Each round consists of 4 → 2 → 1 matches | . Opponent Selection . The system automatically handles opponent selection: . | Randomly selects 7 unique opponents from the participant pool | If pool has fewer than 7 unique entities, can select duplicates | Characters from participantCharacters are converted to enemies and added | If guaranteedWinner is specified, they occupy one of the 7 slots | . Tournament Progression . | Player wins match: Advances to next round | Player loses match: Tournament ends with defeat or secondPlace outcomes | Non-player matches: Determined randomly, unless guaranteedWinner is involved | . Outcome Resolution . Tournament results trigger different event sequences: . | Victory: Player wins finals → victory steps | Second Place: Player loses finals → secondPlace steps (if provided) or defeat steps | Elimination: Player loses before finals → defeat steps | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tournament.html#tournament-mechanics",
    
    "relUrl": "/events/steps/tournament.html#tournament-mechanics"
  },"319": {
    "doc": "Trade With Character Step",
    "title": "Trade With Character Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tradewithcharacter.html",
    
    "relUrl": "/events/steps/tradewithcharacter.html"
  },"320": {
    "doc": "Trade With Character Step",
    "title": "Introduction",
    "content": "Opens the trading interface with a specific character. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tradewithcharacter.html#introduction",
    
    "relUrl": "/events/steps/tradewithcharacter.html#introduction"
  },"321": {
    "doc": "Trade With Character Step",
    "title": "Interface",
    "content": "interface TradeWithCharacterStep { kind: 'tradeWithCharacter'; condition?: string; character: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tradewithcharacter.html#interface",
    
    "relUrl": "/events/steps/tradewithcharacter.html#interface"
  },"322": {
    "doc": "Trade With Character Step",
    "title": "Properties",
    "content": ". | kind - Always 'tradeWithCharacter' . | character - Character to trade with. Must have a shop interaction . | condition (optional) - Conditional execution . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tradewithcharacter.html#properties",
    
    "relUrl": "/events/steps/tradewithcharacter.html#properties"
  },"323": {
    "doc": "Trade With Character Step",
    "title": "Examples",
    "content": "Basic Trading . { kind: 'tradeWithCharacter', character: 'MerchantWang' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/tradewithcharacter.html#examples",
    
    "relUrl": "/events/steps/tradewithcharacter.html#examples"
  },"324": {
    "doc": "Triggered Events",
    "title": "Triggered Events",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/triggered-events.html",
    
    "relUrl": "/events/triggered-events.html"
  },"325": {
    "doc": "Triggered Events",
    "title": "Introduction",
    "content": "Triggered Events provide a powerful system for automatically starting Events based on specific conditions and player context. They watch for opportunities to fire events when players are on certain screens, at specific locations, or when particular conditions are met. This system enables dynamic, responsive content that enhances the player experience without requiring manual interaction - from location introductions and random encounters to progression gates and recurring seasonal events. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/triggered-events.html#introduction",
    
    "relUrl": "/events/triggered-events.html#introduction"
  },"326": {
    "doc": "Triggered Events",
    "title": "Understanding Triggered Events",
    "content": "A TriggeredEvent wraps a GameEvent with trigger conditions that control when and where it activates automatically: . interface TriggeredEvent { event: GameEvent; // The actual event content to execute name: string; // Unique identifier for this trigger trigger: string; // Condition expression for when to trigger screens: GameScreen[]; // Which game screens this can activate on locations?: string[]; // Optional: specific locations for triggering triggerChance?: number; // Optional: random chance (0.0-1.0) to trigger resetMonths?: { // Optional: cooldown between triggers. If not specified, a trigger can only ever run once min: number; max: number; }; usesCooldown?: boolean; // Optional: uses global encounter cooldown (3 days) } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/triggered-events.html#understanding-triggered-events",
    
    "relUrl": "/events/triggered-events.html#understanding-triggered-events"
  },"327": {
    "doc": "Triggered Events",
    "title": "Deep Dive: Trigger Mechanics",
    "content": "How Triggered Events Work . | Context Evaluation - Game checks all TriggeredEvents for current screen/location combination | Condition Testing - Evaluates trigger expression using current flags and game state | Random Chance - Applies triggerChance probability if specified | Cooldown Verification - Ensures cooldown period has passed since last trigger | Event Execution - Processes the GameEvent’s steps in sequence if all conditions pass | . Trigger Conditions . The trigger field uses flag expressions to determine when an event can fire: . // Simple conditions trigger: '1'; // Always trigger when other conditions met trigger: 'tutorialComplete == 0'; // Only if tutorial hasn't been completed trigger: 'realm &gt;= 3'; // Only for Core Formation realm or higher // Complex conditions trigger: 'realm &gt;= 3 &amp;&amp; visitedLocation == 0'; // High realm, first visit trigger: 'power &gt;= 100 &amp;&amp; hasSpecialItem == 1'; // Strong with specific item trigger: 'yearMonth &gt;= 6 &amp;&amp; yearMonth &lt;= 8'; // Summer months only . Screen and Location Targeting . Screen Targeting - The screens array specifies which game screens can trigger this event: . screens: ['location']; // Location/exploration screen only screens: ['market', 'home']; // Market or home screen screens: ['location', 'inventory']; // Location or inventory screen . Common Screen Types: . | 'location' - Location/exploration screen | 'market' - Marketplace screen | 'inventory' - Inventory management screen | 'home' - Home/rest screen | 'crafting' - Crafting interface | 'techniques' - Technique management | . Location Targeting - The optional locations array restricts triggering to specific places: . locations: ['Crystal Shore']; // Only at Crystal Shore locations: ['Sect Grounds', 'Ancient Library']; // Multiple specific locations // Omit locations array = can trigger anywhere (if screen matches) . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/triggered-events.html#deep-dive-trigger-mechanics",
    
    "relUrl": "/events/triggered-events.html#deep-dive-trigger-mechanics"
  },"328": {
    "doc": "Triggered Events",
    "title": "Practical Examples",
    "content": "Location Introduction Event . Perfect for first-time location visits: . const ancientLibraryIntro: GameEvent = { location: 'Ancient Library', steps: [ { kind: 'text', text: 'Towering shelves stretch into shadow, filled with countless scrolls and tomes. The air itself seems heavy with accumulated knowledge.', }, { kind: 'speech', character: 'Ancient Librarian', text: 'Welcome, seeker. These halls have waited long for one with your... potential.', }, { kind: 'flag', flag: 'discoveredAncientLibrary', value: '1', global: true, }, ], }; const libraryIntroTrigger: TriggeredEvent = { event: ancientLibraryIntro, name: 'ancientLibraryFirstVisit', trigger: 'discoveredAncientLibrary == 0', // First visit only screens: ['location'], locations: ['Ancient Library'], }; // Register with your mod window.modAPI.actions.addTriggeredEvent(libraryIntroTrigger); . Random Encounter System . Create chance-based encounters while exploring: . const mysteriousStranger: GameEvent = { location: 'Mountain Path', steps: [ { kind: 'text', text: 'A hooded figure emerges from the mountain mists, blocking your path.', }, { kind: 'speech', character: 'Mysterious Cultivator', text: 'Your cultivation shows promise. Perhaps you are worthy of this test...', }, { kind: 'choice', choices: [ { text: 'Accept the challenge', children: [ //... ], }, { text: 'Politely decline', children: [ { kind: 'speech', character: 'Mysterious Cultivator', text: \"Wisdom in knowing one's limits. We shall meet again.\", }, ], }, ], }, ], }; const strangerEncounter: TriggeredEvent = { event: mysteriousStranger, name: 'mountainPathStranger', trigger: 'realm &gt;= meridianOpening', screens: ['location'], locations: ['Mountain Path', 'High Peaks'], triggerChance: 0.15, // 15% chance when conditions met resetMonths: { min: 2, max: 4 }, // 2-4 months between encounters usesCooldown: true, // Uses global encounter cooldown }; . Progression Gate Event . Trigger story events when player reaches milestones: . const realmBreakthroughCelebration: GameEvent = { location: 'Sect Grounds', steps: [ { kind: 'text', text: 'Your breakthrough to Core Formation sends ripples through the sect. Fellow disciples gather to witness your transformed spiritual presence.', }, { kind: 'speech', character: 'Sect Master', text: 'Excellent progress! Your dedication has earned you access to the Inner Sanctum.', }, { kind: 'unlockLocation', location: 'Inner Sanctum', }, { kind: 'addItem', item: 'Core Formation Recognition Token', amount: 1, }, ], }; const breakthroughTrigger: TriggeredEvent = { event: realmBreakthroughCelebration, name: 'coreFormationCelebration', trigger: 'realm &gt;= 3 &amp;&amp; coreFormationCelebrated == 0', // Just reached Core Formation screens: ['location', 'home'], locations: ['Sect Grounds'], }; . Seasonal/Timed Events . Create events that occur during specific time periods: . const springFestival: GameEvent = { location: 'Village Square', steps: [ { kind: 'text', text: 'The annual Spring Blossom Festival fills the village with celebration. Colorful banners flutter in the warm breeze.', }, { kind: 'choice', choices: [ { text: 'Participate in the cultivation contest', children: [ { kind: 'text', text: 'You demonstrate your techniques to enthusiastic crowds.', }, { kind: 'flag', flag: 'springFestivalParticipant', value: '1', global: true, }, ], }, { text: 'Enjoy the festivities quietly', children: [ { kind: 'text', text: 'You find peace in observing the joyful celebrations.', }, ], }, ], }, ], }; const festivalTrigger: TriggeredEvent = { event: springFestival, name: 'springBlossomFestival', trigger: 'yearMonth == 3', // The third month, once per year screens: ['location'], locations: ['Village Square'], resetMonths: { min: 12, max: 12 }, // Annual event }; . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/triggered-events.html#practical-examples",
    
    "relUrl": "/events/triggered-events.html#practical-examples"
  },"329": {
    "doc": "Triggered Events",
    "title": "Advanced Techniques",
    "content": "Multi-Stage Story Events . Use flags to create continuing storylines: . // First encounter const mysteryBegins: TriggeredEvent = { event: { location: 'Forest Path', steps: [ { kind: 'text', text: 'You discover strange tracks leading deeper into the forest.', }, { kind: 'flag', flag: 'mysteryTracks', value: '1', global: true }, ], }, name: 'mysteryTracksDiscovery', trigger: 'mysteryTracks == 0', screens: ['location'], locations: ['Forest Path'], triggerChance: 0.3, }; // Follow-up encounter const mysteryDeepens: TriggeredEvent = { event: { location: 'Deep Forest', steps: [ { kind: 'text', text: \"The tracks lead to an abandoned cultivator's retreat.\", }, { kind: 'flag', flag: 'foundRetreat', value: '1', global: true }, ], }, name: 'mysteryRetreatDiscovery', trigger: 'mysteryTracks &gt;= 1 &amp;&amp; foundRetreat == 0', screens: ['location'], locations: ['Deep Forest'], }; . Conditional Complexity . Create sophisticated triggering logic: . const masterEncounter: TriggeredEvent = { event: masterTeachingEvent, name: 'hiddenMasterAppears', trigger: ` realm &gt;= 4 &amp;&amp; power &gt;= 200 &amp;&amp; (helpedVillagers &gt;= 5 || defeatedBandits &gt;= 3) &amp;&amp; visitedAllBasicLocations == 1 &amp;&amp; masterEncountered == 0 `, // Complex multi-condition trigger screens: ['location'], triggerChance: 0.4, resetMonths: { min: 6, max: 12 }, }; . Dynamic Location Targeting . Use arrays for flexible location targeting: . const wanderingMerchant: TriggeredEvent = { event: merchantEvent, name: 'wanderingMerchantAppears', trigger: '1', // Always available screens: ['location'], locations: [ 'Village Square', 'Town Center', 'Crossroads', 'Market District', 'Sect Gates', ], // Can appear at multiple trading locations triggerChance: 0.05, // Rare encounter resetMonths: { min: 1, max: 3 }, }; . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/triggered-events.html#advanced-techniques",
    
    "relUrl": "/events/triggered-events.html#advanced-techniques"
  },"330": {
    "doc": "Triggered Events",
    "title": "When to Use Triggered Events",
    "content": "Triggered Events are ideal for: . Location Introductions . First-time visit events that set atmosphere and context . Random Encounters . Chance-based events that add unpredictability to exploration . Progression Gates . Events that fire when players reach certain milestones or achievements . Recurring Events . Events that repeat with cooldowns - seasonal festivals, merchant visits, etc. Contextual Events . Events specific to certain screens, locations, or game states . Atmospheric Events . Background events that enhance immersion without requiring direct interaction . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/triggered-events.html#when-to-use-triggered-events",
    
    "relUrl": "/events/triggered-events.html#when-to-use-triggered-events"
  },"331": {
    "doc": "Triggered Events",
    "title": "Alternative Event Triggering",
    "content": "Remember, TriggeredEvents are just one way to start events. Events can also be initiated through: . | Character Interactions - Talking to, trading with, or fighting NPCs | Location Events - Built into location definitions for guaranteed triggers | Quest Steps - Events as part of structured quest progression | Calendar Events - Scheduled events tied to specific dates | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/triggered-events.html#alternative-event-triggering",
    
    "relUrl": "/events/triggered-events.html#alternative-event-triggering"
  },"332": {
    "doc": "Unlock Altar Step",
    "title": "Unlock Altar Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlockaltar.html",
    
    "relUrl": "/events/steps/unlockaltar.html"
  },"333": {
    "doc": "Unlock Altar Step",
    "title": "Introduction",
    "content": "The Unlock Altar Step unlocks altar functionality for breakthrough attempts and cultivation advancement. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlockaltar.html#introduction",
    
    "relUrl": "/events/steps/unlockaltar.html#introduction"
  },"334": {
    "doc": "Unlock Altar Step",
    "title": "Interface",
    "content": "interface UnlockAltarStep { kind: 'unlockAltar'; condition?: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlockaltar.html#interface",
    
    "relUrl": "/events/steps/unlockaltar.html#interface"
  },"335": {
    "doc": "Unlock Altar Step",
    "title": "Properties",
    "content": ". | kind - Always 'unlockAltar' . | condition - Conditional execution (optional) . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlockaltar.html#properties",
    
    "relUrl": "/events/steps/unlockaltar.html#properties"
  },"336": {
    "doc": "Unlock Altar Step",
    "title": "Examples",
    "content": "{ kind: 'unlockAltar'; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlockaltar.html#examples",
    
    "relUrl": "/events/steps/unlockaltar.html#examples"
  },"337": {
    "doc": "Unlock Crafting Technique Step",
    "title": "Unlock Crafting Technique Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlockcraftingtechnique.html",
    
    "relUrl": "/events/steps/unlockcraftingtechnique.html"
  },"338": {
    "doc": "Unlock Crafting Technique Step",
    "title": "Introduction",
    "content": "The Unlock Crafting Technique Step grants the player new crafting actions. The crafting action must first have been added via the window.modAPI.action.addCraftingTechnique function. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlockcraftingtechnique.html#introduction",
    
    "relUrl": "/events/steps/unlockcraftingtechnique.html#introduction"
  },"339": {
    "doc": "Unlock Crafting Technique Step",
    "title": "Interface",
    "content": "interface UnlockCraftingTechniqueStep { kind: 'unlockCraftingTechnique'; condition?: string; craftingTechnique: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlockcraftingtechnique.html#interface",
    
    "relUrl": "/events/steps/unlockcraftingtechnique.html#interface"
  },"340": {
    "doc": "Unlock Crafting Technique Step",
    "title": "Properties",
    "content": "kind - Always 'unlockCraftingTechnique' . craftingTechnique - Crafting technique to unlock . condition (optional) - Conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlockcraftingtechnique.html#properties",
    
    "relUrl": "/events/steps/unlockcraftingtechnique.html#properties"
  },"341": {
    "doc": "Unlock Crafting Technique Step",
    "title": "Example",
    "content": "{ kind: 'unlockCraftingTechnique', craftingTechnique: 'Advanced Pill Refinement' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlockcraftingtechnique.html#example",
    
    "relUrl": "/events/steps/unlockcraftingtechnique.html#example"
  },"342": {
    "doc": "Unlock Location Step",
    "title": "Unlock Location Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlocklocation.html",
    
    "relUrl": "/events/steps/unlocklocation.html"
  },"343": {
    "doc": "Unlock Location Step",
    "title": "Introduction",
    "content": "The Unlock Location Step makes new locations accessible on the world map, expanding the player’s exploration options. The location must first have been added with the window.modAPI.actions.addLocation function and connected to the world using the window.modAPI.actions.linkLocations function . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlocklocation.html#introduction",
    
    "relUrl": "/events/steps/unlocklocation.html#introduction"
  },"344": {
    "doc": "Unlock Location Step",
    "title": "Interface",
    "content": "interface UnlockLocationStep { kind: 'unlockLocation'; condition?: string; location: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlocklocation.html#interface",
    
    "relUrl": "/events/steps/unlocklocation.html#interface"
  },"345": {
    "doc": "Unlock Location Step",
    "title": "Properties",
    "content": ". | kind - Always 'unlockLocation' . | location - Name of location to unlock . | condition - Conditional execution (optional) . | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlocklocation.html#properties",
    
    "relUrl": "/events/steps/unlocklocation.html#properties"
  },"346": {
    "doc": "Unlock Location Step",
    "title": "Examples",
    "content": "{ kind: 'unlockLocation', location: 'Hidden Valley' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlocklocation.html#examples",
    
    "relUrl": "/events/steps/unlocklocation.html#examples"
  },"347": {
    "doc": "Unlock Technique Step",
    "title": "Unlock Technique Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlocktechnique.html",
    
    "relUrl": "/events/steps/unlocktechnique.html"
  },"348": {
    "doc": "Unlock Technique Step",
    "title": "Introduction",
    "content": "The Unlock Technique Step grants the player new combat techniques. The technique must first have been added with the window.modAPI.actions.addTechnique function . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlocktechnique.html#introduction",
    
    "relUrl": "/events/steps/unlocktechnique.html#introduction"
  },"349": {
    "doc": "Unlock Technique Step",
    "title": "Interface",
    "content": "interface UnlockTechniqueStep { kind: 'unlockTechnique'; condition?: string; technique: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlocktechnique.html#interface",
    
    "relUrl": "/events/steps/unlocktechnique.html#interface"
  },"350": {
    "doc": "Unlock Technique Step",
    "title": "Properties",
    "content": "kind - Always 'unlockTechnique' . technique - Technique to unlock . condition (optional) - Conditional execution . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlocktechnique.html#properties",
    
    "relUrl": "/events/steps/unlocktechnique.html#properties"
  },"351": {
    "doc": "Unlock Technique Step",
    "title": "Example",
    "content": "{ kind: 'unlockTechnique', technique: 'Dragon Palm Strike' } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/unlocktechnique.html#example",
    
    "relUrl": "/events/steps/unlocktechnique.html#example"
  },"352": {
    "doc": "Update Character Definition Step",
    "title": "Update Character Definition Step",
    "content": " ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/updatecharacterdefinition.html",
    
    "relUrl": "/events/steps/updatecharacterdefinition.html"
  },"353": {
    "doc": "Update Character Definition Step",
    "title": "Introduction",
    "content": "The Update Character Definition Step forces re-evaluation of which character definition should be active for a character based on current flag conditions. Characters can have multiple definitions with different behaviors, and this step ensures they switch to the appropriate definition when game state changes. ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/updatecharacterdefinition.html#introduction",
    
    "relUrl": "/events/steps/updatecharacterdefinition.html#introduction"
  },"354": {
    "doc": "Update Character Definition Step",
    "title": "Interface",
    "content": "interface UpdateCharacterDefinitionStep { kind: 'updateCharacterDefinition'; condition?: string; character: string; } . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/updatecharacterdefinition.html#interface",
    
    "relUrl": "/events/steps/updatecharacterdefinition.html#interface"
  },"355": {
    "doc": "Update Character Definition Step",
    "title": "Properties",
    "content": "kind - Always 'updateCharacterDefinition' . character - Name of the character to update . | Must reference an existing character by name | The character must have multiple definitions with varying conditions | Triggers re-evaluation of which definition should be active | . condition (optional) - Conditional execution . | Flag expression that must be true for the update to occur | Step is skipped if condition fails | . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/updatecharacterdefinition.html#properties",
    
    "relUrl": "/events/steps/updatecharacterdefinition.html#properties"
  },"356": {
    "doc": "Update Character Definition Step",
    "title": "Examples",
    "content": "Quest Progression Update . [ { kind: 'flag', flag: 'forgeSpiritCoreGiven', value: '1', global: true, }, { kind: 'updateCharacterDefinition', character: 'Forge Spirit', }, ]; . Character Evolution . [ { kind: 'flag', flag: 'juniorDiscipleAdvanced', value: '1', global: true, }, { kind: 'updateCharacterDefinition', character: 'Junior Disciple', }, ]; . ",
    "url": "/Cultivation/exampleMod/AfnmExampleMod/docs/events/steps/updatecharacterdefinition.html#examples",
    
    "relUrl": "/events/steps/updatecharacterdefinition.html#examples"
  }
}
